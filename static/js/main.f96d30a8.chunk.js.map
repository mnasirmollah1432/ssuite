{"version":3,"sources":["app/store/hooks/easyPeasy.ts","app/topNavbar.tsx","app/layouts/sidebar/Sidebar.tsx","app/container/pages/dashboard/Dashboard.page.tsx","app/container/select/SelectDistrict.tsx","app/container/select/SelectThana.tsx","app/container/pages/partner/PendingListSuperAdmin.page.tsx","app/container/pages/partner/OrderListSuperAdmin.page.tsx","app/container/pages/partner/PreApproveOrderListSuperAdmin.page.tsx","app/container/select/SelectProduct.tsx","app/container/select/SelectPackage.tsx","app/container/select/SelectCategoryOrg.tsx","app/container/select/SelectTypeOrg.tsx","app/container/select/SelectBillCycle.tsx","app/container/pages/partner/OrderFormPartner.page.tsx","app/container/pages/partner/BillGenerateMonthlySuperAdmin.page.tsx","app/container/select/SelectClient.tsx","app/container/pages/partner/BillGenerateYearlySuperAdmin.page.tsx","app/container/pages/partner/BillDisbursSuperAdmin.page.tsx","app/container/utils/getColumnSearchProps.tsx","app/container/pages/partner/BillPaymentAPIPReport.page.tsx","app/container/pages/partner/BillPaymentPIPReport.page.tsx","app/container/pages/partner/BillPaymentSDLReport.page.tsx","app/container/pages/partner/BillPaymentSDLMonthlyReport.page.tsx","app/Container.tsx","assets/images/sp_logo.png","app/components/auth/Login.tsx","app/components/auth/Authenticated.tsx","app/container/pages/signup/Signup.page.tsx","app/container/pages/signup/Success.page.tsx","App.tsx","reportWebVitals.ts","app/http/http.ts","app/http/auth/auth.ts","app/store/states/auth/auth.ts","app/http/common/common.ts","app/store/states/common/common.ts","app/http/partner/partner.ts","app/store/states/partner/partner.ts","app/http/partner/order.ts","app/store/states/partner/order.ts","app/http/bill/bill.ts","app/store/store.ts","app/store/states/bill/bill.ts","index.tsx"],"names":["typedHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","Text","Typography","TopNavBar","onLogout","userData","logout","actions","auth","logoutclear","user","state","xs","sm","md","lg","xl","id","content","access_token","style","width","marginTop","danger","onClick","textAlign","size","icon","UserOutlined","strong","username","placement","trigger","marginRight","className","Sidebar","fetchpartnerProfile","common","partnerProfile","useEffect","useState","pathValue","setpathValue","setmainpathValue","window","location","pathname","theme","defaultSelectedKeys","mode","selectedKeys","Item","to","designation","title","Dashboard","props","setPageTitle","pageTitleEle","document","getElementById","innerHTML","ds","name","partnerName","children","tree","map","item","index","gutter","src","alt","partnerCustomId","area","datasource","chartClass","Option","Select","SelectDistrict","onChange","selected","defaultSelected","districtList","districtListFetch","thanaListFetch","React","districtId","districtsId","distrcit","find","showSearch","defaultValue","value","placeholder","filterOption","input","option","undefined","toLowerCase","indexOf","type","idx","districtName","SelectThana","thanaList","thanaId","thana","allowClear","thanaName","PendingListSuperAdmin","pendingList","partner","underPartnerList","fetchPendingList","fetchpartnerListByLevel","partnerAssign","applicantPartnerDelete","Form","useForm","assignForm","assignModal","setassignModal","disId","setdisId","setThanaId","rowId","setRowID","underPartnerid","setunderPartnerid","columns","dataIndex","key","render","text","record","TeamOutlined","partnerId","okText","cancelText","onConfirm","DeleteOutlined","bordered","dataSource","centered","visible","onOk","onCancel","cancelButtonProps","display","okButtonProps","layout","onFinish","postsubmit","areaId","thana_id","parentId","under_partner","partnerLevel","parseInt","partner_level","form","label","rules","required","message","val","setFieldsValue","options","onchangeDistrict","onchangeThana","float","htmlType","OrderListSuperAdmin","pendingProductOrderList","order","fetchpendingProductOrderList","deleteProductOrder","preApproveProductOrderPost","orderId","preApproveProductOrderList","fetchpreApproveProductOrderList","approveProductOrder","SelectProduct","itemList","productList","itemListFetch","fetchproductList","fetchclientList","fetchpackageListByProductId","productId","console","log","productName","SelectPackage","packageListByProductId","packageId","packageName","SelectCategoryOrg","selectedCat","setitemList","SelectTypeOrg","setselectedCat","SelectBillCycle","OrderFormPartner","orderForm","postsaveProductOrder","ordersuccess","setordersuccess","setTimeout","setProductId","setPackageId","selectOrgType","setSelectOrgType","selectOrgCat","setSelectOrgCat","billCycle","setBillCycle","labelCol","span","wrapperCol","postData","adminName","admin_name","aggreementEndDate","moment","aed","format","agreementDate","ad","bill_cycle","clientAddress","village","post_office","clientName","insName","contactNo","personal_number","email","handOverDate","hod","numberOfStaff","number_staff","numberOfStudent","number_student","organizationCategory","ins_category","organizationType","ins_type","package_id","product_id","onchangeproductId","onchangepackageId","max","onchangeselectOrgType","onchangeselectOrgCat","onchangebillCycle","status","subTitle","extra","DatePicker","RangePicker","BillGenerateSuperAdmin","saveProductBillGenerateMonthly","bill","billgenerateForm","year","Date","getFullYear","postMonthly","customProductId","month","initialValue","SelectClient","clientList","clientId","saveProductBillGenerateYearly","fetchclientUnit","clientUnit","clientVal","setClientVal","monthLength","setmonthLength","num","setNum","total","settotal","parseFloat","postYearly","client","months","productRate","onchangeClient","min","onchangesetNum","length","onchangemonthLength","TextArea","Input","disbursementPayableList","fetchdisbursementPayableList","saveDisbursement","isModalVisible","setIsModalVisible","modalVal","setmodalVal","billDisbursForm","ShopOutlined","partnetId","billId","distributionIds","payableAmount","distributionIdList","date","note","trnxId","disabled","GetColumnSearchProps","placeHolder","searchText","setsearchText","setsearchedColumn","searchInput","handleSearch","confirm","filterDropdown","setSelectedKeys","clearFilters","padding","ref","e","target","onPressEnter","marginBottom","SearchOutlined","handleReset","filterIcon","filtered","color","onFilter","toString","includes","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","BillPaymentReport","searchApipClientBillPaidUnpaidList","fetchsearchApipClientBillPaidUnpaidList","currentyear","optionsYear","values","searchPipClientBillPaidUnpaidList","fetchsearchPipClientBillPaidUnpaidList","searchSdlClientBillPaidUnpaidList","fetchsearchSdlClientBillPaidUnpaidList","searchApipClientBillPaidUnpaidListSDL","fetchsearchApipClientBillPaidUnpaidListSDL","hasData","sethasData","apipD","setapipD","apipName","setapipName","EyeOutlined","apipId","columnsAPIP","searchProductWiseMonthlyPaidUnpaidList","fetchsearchProductWiseMonthlyPaidUnpaidList","Header","Layout","Content","Sider","Container","collapsed","setCollapsed","minHeight","collapsible","onCollapse","breakpoint","onBreakpoint","broken","exact","path","component","Pendinglist","PreApproveOrderListSuperAdmin","BillGenerateMonthlySuperAdmin","BillGenerateYearlySuperAdmin","BillDisbursSuperAdmin","BillPaymentAPIPReport","BillPaymentPIPReport","BillPaymentSDLReport","BillPaymentSDLMonthlyReport","antIcon","LoadingOutlined","fontSize","spin","Login","authenticate","setBusy","error","isBusy","busy","rememberChoice","handleSubmit","payload","a","remember","logo","prefix","suffix","InfoCircleOutlined","Password","justify","event","checked","indicator","HomeOutlined","marginLeft","MailOutlined","href","PhoneOutlined","Authenticated","Component","otherProps","Step","Steps","examTitleIndex","examMajorIndex","Signup","partnerSignup","signUpStatus","step","setStep","signUpData","setSignUpData","basicInfo","companyInfo","bankInfo","fileSave","setfileSave","fileName","setfileName","fileContent","setfileContent","disBtn","setdisBtn","educationData","seteducationData","newObj","uuidv4","exam_title","major","institute","result","passing_year","duration","examTitle","setExamTitle","examName","setexamName","examMajor","setexamMajor","majorName","setmajorName","onExamNameChange","addItemExamName","onMajorNameChange","addItemMajorName","onValueChangeSelect","newData","onValueChangeInput","yearList","setYearList","yearArr","k","push","yearOption","educationCol","dropdownRender","menu","margin","flexWrap","flex","cursor","PlusOutlined","maxLength","data","handleAddRow","temp","filter","handleDeleteExam","fileList","setFileList","onPreview","file","url","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","image","Image","open","write","outerHTML","current","businessIdentificationNo","birthDate","corporateMobileNo","postOffice","user_image","district_id","rotate","listType","accept","newFileList","thumbUrl","split","UploadOutlined","ArrowRightOutlined","ArrowLeftOutlined","filtereducationData","educationInfos","nextEducation","companyAddress","companyName","companyTinNo","tradeLicenceNo","Object","assign","swiftCode","SendOutlined","App","checkAuth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","API_BASE","process","request","method","headers","token","fetch","cache","body","JSON","stringify","postAuth","myHeaders","Headers","append","formdata","FormData","password","requestAuth","removeToken","removeTokenFunction","post","get","del","authStore","thunk","jwt","localStorage","getItem","authenticated","parse","response","json","setItem","removeItem","loginFailed","action","isbusy","reload","fetchThanaList","commonStore","setdistrictList","setthanaList","setpartnerProfile","partnerStore","messageType","setSignUpStatus","setPendingListItem","setUnderPartner","notification","description","newresponse","preApproveProductOrder","orderStore","setproductList","setclientList","setpackageListByProductId","orderStatus","setpendingProductOrderList","setpreApproveProductOrderListt","storeModel","setclientUnit","setdisbursementPayableList","setsearchApipClientBillPaidUnpaidList","setsearchPipClientBillPaidUnpaidList","setsearchSdlClientBillPaidUnpaidList","setsearchApipClientBillPaidUnpaidListSDL","setsearchProductWiseMonthlyPaidUnpaidList","store","createStore","ReactDOM"],"mappings":"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","file":"static/js/main.f96d30a8.chunk.js","sourcesContent":["import { createTypedHooks } from 'easy-peasy';\nimport { StoreModel } from '../store';\n\nconst typedHooks = createTypedHooks<StoreModel>();\n\nexport const useStoreActions = typedHooks.useStoreActions;\nexport const useStoreDispatch = typedHooks.useStoreDispatch;\nexport const useStoreState = typedHooks.useStoreState;","import React from 'react';\r\nimport { useStoreActions, Actions } from \"easy-peasy\";\r\nimport { StoreModel } from \"./store/store\";\r\nimport { Button, Card, Col, Popover, Row, Typography } from 'antd';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport { useStoreState } from './store/hooks/easyPeasy';\r\n\r\nconst { Text } = Typography;\r\n\r\nexport default function TopNavBar() {\r\n\r\n  const logout = useStoreActions(\r\n    (actions: Actions<StoreModel>) => actions.auth.logout\r\n  );\r\n  const logoutclear = useStoreActions(\r\n    (actions: Actions<StoreModel>) => actions.auth.logoutclear\r\n  );\r\n\r\n  const user = useStoreState(state => state.auth.user)\r\n\r\n  const logoutfunc = () => {\r\n    logoutclear(user?.access_token);\r\n    logout(\"\");\r\n  }\r\n  const profilePopover = (onLogout, userData) => (\r\n    <Card\r\n      style={{ width: 300, marginTop: 16 }}\r\n      actions={[\r\n        <Button danger onClick={onLogout}>\r\n          Logout\r\n            </Button>,\r\n      ]}\r\n    >\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <Avatar size={100} icon={<UserOutlined />} />\r\n      </div>\r\n      <div style={{ textAlign: \"center\", marginTop: 12 }}>\r\n        <Text strong>Username: {userData?.username} </Text>\r\n      </div>\r\n    </Card>\r\n  );\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col xs={24} sm={24} md={24} lg={23} xl={23}>\r\n          <h3 id=\"pageTitle\">Sheba Suite</h3>\r\n        </Col>\r\n        <Col xs={24} sm={24} md={24} lg={1} xl={1} >\r\n          <Popover\r\n            content={profilePopover(logoutfunc, user)}\r\n            placement=\"bottomLeft\"\r\n            trigger=\"click\"\r\n          >\r\n            <Avatar\r\n              icon={<UserOutlined />}\r\n              size=\"large\"\r\n              style={{ marginRight: 5 }}\r\n              className=\"pointer\"\r\n            />\r\n          </Popover>\r\n        </Col>\r\n      </Row>\r\n\r\n    </>\r\n  );\r\n}","import { Menu } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { CalculatorOutlined, ContainerOutlined, DashboardTwoTone, DollarCircleOutlined, FileTextOutlined, FundProjectionScreenOutlined, FundViewOutlined, PartitionOutlined, UserAddOutlined, UserOutlined } from '@ant-design/icons/lib';\r\nimport SubMenu from 'antd/lib/menu/SubMenu';\r\nimport { useStoreActions, useStoreState } from '../../store/hooks/easyPeasy';\r\n\r\nexport function Sidebar() {\r\n\t// console.log(window.location.pathname)\r\n\tconst fetchpartnerProfile = useStoreActions(state => state.common.fetchpartnerProfile);\r\n\tconst partnerProfile = useStoreState(state => state.common.partnerProfile);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchpartnerProfile();\r\n\t}, []);\r\n\r\n\tconst [pathValue, setpathValue] = useState<any>(\"1\")\r\n\tconst [mainpathValue, setmainpathValue] = useState<any>(null)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (window.location.pathname == '/pending') {\r\n\t\t\tsetpathValue(\"2\")\r\n\t\t} else if (window.location.pathname == '/order-form') {\r\n\t\t\tsetmainpathValue(\"sub1\")\r\n\t\t\tsetpathValue(\"3\")\r\n\t\t} else if (window.location.pathname == '/order-list') {\r\n\t\t\tsetpathValue(\"4\")\r\n\t\t} else if (window.location.pathname == '/payable-bill') {\r\n\t\t\tsetpathValue(\"5\")\r\n\t\t} else if (window.location.pathname == '/paid-bill') {\r\n\t\t\tsetpathValue(\"6\")\r\n\t\t} else if (window.location.pathname == '/bill-generate-monthly') {\r\n\t\t\tsetpathValue(\"7\")\r\n\t\t} else if (window.location.pathname == '/preorder-list') {\r\n\t\t\tsetpathValue(\"8\")\r\n\t\t} else if (window.location.pathname == '/bill-generate-yearly') {\r\n\t\t\tsetpathValue(\"9\")\r\n\t\t} else if (window.location.pathname == '/bill-disbursment') {\r\n\t\t\tsetpathValue(\"10\")\r\n\t\t} else if (window.location.pathname == '/bill-payment-apip') {\r\n\t\t\tsetpathValue(\"11\")\r\n\t\t} else if (window.location.pathname == '/bill-payment-pip') {\r\n\t\t\tsetpathValue(\"12\")\r\n\t\t} else if (window.location.pathname == '/bill-payment-sdl') {\r\n\t\t\tsetpathValue(\"13\")\r\n\t\t} else if (window.location.pathname == '/bill-payment-sdl-monthly') {\r\n\t\t\tsetpathValue(\"14\")\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetpathValue(\"1\")\r\n\t\t}\r\n\t}, [window.location.pathname])\r\n\r\n\t// console.log(pathValue)\r\n\r\n\treturn <Menu theme=\"dark\" defaultSelectedKeys={[pathValue]} mode=\"inline\" selectedKeys={[pathValue]}>\r\n\t\t<Menu.Item key=\"1\" icon={<DashboardTwoTone />}>\r\n\t\t\t<Link to=\"/\" className=\"nav-text\">Dashboard</Link>\r\n\t\t</Menu.Item>\r\n\t\t{partnerProfile?.designation == \"APIP\" &&\r\n\t\t\t<>\r\n\t\t\t\t<SubMenu key={\"sub1\"} icon={<PartitionOutlined />} title=\"Partner\" >\r\n\t\t\t\t\t<Menu.Item key=\"3\" icon={<FileTextOutlined />}>\r\n\t\t\t\t\t\t<Link to=\"/order-form\" className=\"nav-text\">Order Form</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\t\t\t\t<SubMenu key={\"reportApip\"} icon={<PartitionOutlined />} title=\"Report\" >\r\n\t\t\t\t\t<Menu.Item key=\"11\" icon={<FileTextOutlined />}>\r\n\t\t\t\t\t\t<Link to=\"/bill-payment-apip\" className=\"nav-text\">Bill Payment</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\t\t\t</>\r\n\t\t}\r\n\t\t{partnerProfile?.designation == \"PIP\" &&\r\n\t\t\t<>\r\n\t\t\t\t<SubMenu key={\"reportPip\"} icon={<PartitionOutlined />} title=\"Report\" >\r\n\t\t\t\t\t<Menu.Item key=\"12\" icon={<FileTextOutlined />}>\r\n\t\t\t\t\t\t<Link to=\"/bill-payment-pip\" className=\"nav-text\">Bill Payment</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\t\t\t</>\r\n\t\t}\r\n\t\t{partnerProfile?.designation == \"SDL\" &&\r\n\t\t\t<>\r\n\t\t\t\t<SubMenu key={\"reportPip\"} icon={<PartitionOutlined />} title=\"Report\" >\r\n\t\t\t\t\t<Menu.Item key=\"13\" icon={<FileTextOutlined />}>\r\n\t\t\t\t\t\t<Link to=\"/bill-payment-sdl\" className=\"nav-text\">Bill Payment</Link>\r\n\t\t\t\t\t</Menu.Item>\t\t\t\t\t\r\n\t\t\t\t\t<Menu.Item key=\"14\" icon={<FileTextOutlined />}>\r\n\t\t\t\t\t\t<Link to=\"/bill-payment-sdl-monthly\" className=\"nav-text\">Monthly Bill Payment</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\t\t\t</>\r\n\t\t}\r\n\t\t{/* <Menu.Item key=\"5\" icon={<FundProjectionScreenOutlined />}>\r\n\t\t\t\t<Link to=\"/payable-bill\" className=\"nav-text\">Payable Bill</Link>\r\n\t\t\t</Menu.Item>\r\n\t\t\t<Menu.Item key=\"6\" icon={<FundViewOutlined />}>\r\n\t\t\t\t<Link to=\"/paid-bill\" className=\"nav-text\">Paid Bill</Link>\r\n\t\t\t</Menu.Item> */}\r\n\r\n\t\t{partnerProfile?.designation == \"SDL\" && <>\r\n\t\t\t<SubMenu key=\"sub2\" icon={<UserOutlined />} title=\"Super Admin\" >\r\n\t\t\t\t<Menu.Item key=\"2\" icon={<UserAddOutlined />}>\r\n\t\t\t\t\t<Link to=\"/pending\" className=\"nav-text\">Pending Partner</Link>\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t\t<SubMenu key=\"sub8\" icon={<ContainerOutlined />} title=\"Order List\" >\r\n\t\t\t\t\t<Menu.Item key=\"4\" icon={<ContainerOutlined />}>\r\n\t\t\t\t\t\t<Link to=\"/order-list\" className=\"nav-text\">General</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key=\"8\" icon={<ContainerOutlined />}>\r\n\t\t\t\t\t\t<Link to=\"/preorder-list\" className=\"nav-text\">Pre-Approve</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\t\t\t\t<Menu.Item key=\"10\" icon={<ContainerOutlined />}>\r\n\t\t\t\t\t<Link to=\"/bill-disbursment\" className=\"nav-text\">Bill Disbursment</Link>\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t\t<SubMenu key=\"sub3\" icon={<CalculatorOutlined />} title=\"Bill Generate\" >\r\n\t\t\t\t\t<Menu.Item key=\"7\" icon={<CalculatorOutlined />}>\r\n\t\t\t\t\t\t<Link to=\"/bill-generate-monthly\" className=\"nav-text\">Monthly</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key=\"9\" icon={<CalculatorOutlined />}>\r\n\t\t\t\t\t\t<Link to=\"/bill-generate-yearly\" className=\"nav-text\">Yearly</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\t\t\t</SubMenu>\r\n\t\t</>\r\n\t\t}\r\n\r\n\r\n\r\n\t</Menu>\r\n}\r\n","import { Card, Col, Divider, Row } from 'antd'\r\nimport React, { useEffect } from 'react'\r\nimport OrganizationChart from \"@dabeng/react-orgchart\";\r\nimport \"./chart.css\";\r\nimport { useStoreActions, useStoreState } from '../../../store/hooks/easyPeasy';\r\n\r\nexport default function Dashboard(props) {\r\n\r\n    const fetchpartnerProfile = useStoreActions(state => state.common.fetchpartnerProfile);\r\n    const partnerProfile = useStoreState(state => state.common.partnerProfile);\r\n\r\n    useEffect(() => {\r\n        fetchpartnerProfile();\r\n        setPageTitle();\r\n    }, []);\r\n\r\n  //  console.log(partnerProfile);\r\n\r\n    function childrenfunc(item) {\r\n        return\r\n    }\r\n\r\n    const setPageTitle = () => {\r\n        var pageTitleEle = document.getElementById('pageTitle');\r\n        var pageTitle = 'Dashboard'\r\n        return pageTitleEle ?  pageTitleEle.innerHTML = pageTitle : ''      \r\n    }\r\n\r\n    const ds = {\r\n        id: 1,\r\n        name: partnerProfile?.partnerName,\r\n        title: partnerProfile?.designation,\r\n        children: partnerProfile?.tree.map(function (item, index) {\r\n            return {\r\n                id: index,\r\n                name: item,\r\n                title: partnerProfile?.designation === \"SDL\" ? \"PIP\" : partnerProfile?.designation === \"PIP\" ? \"APIP\" : \"\"\r\n            }\r\n        })\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <br />\r\n            <Card title=\"\" >\r\n                <Row gutter={8}>\r\n                    <Col xs={24} sm={24} md={24} lg={8} xl={8} className=\"__profile\">\r\n                        <div className=\"card-block text-center text-white\">\r\n                            <div className=\"m-b-25\"> <img src=\"https://img.icons8.com/bubbles/100/000000/user.png\" className=\"img-radius\" alt=\"User-Profile-Image\" /> </div>\r\n                            <span className=\"f-w-600\">Name : {partnerProfile?.partnerName}</span>\r\n                            <p className=\"f-w-600\">Id: {partnerProfile?.partnerCustomId}</p>\r\n                        </div>\r\n\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={24} lg={16} xl={16} >\r\n                        <div className=\"card-block\">\r\n                            <span className=\"f-w-601\">Information</span>\r\n                            <Divider style={{ marginTop: 10 }}></Divider>\r\n                            <p className=\"f-w-601\">Designation: {partnerProfile?.designation}</p>\r\n                            <p className=\"f-w-601\">Area: {partnerProfile?.area}</p>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n            <OrganizationChart\r\n                datasource={ds}\r\n                chartClass=\"myChart\"\r\n            // NodeTemplate={MyNode}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import { Select } from \"antd\";\nimport * as React from \"react\";\nimport { useStoreActions, useStoreState } from \"../../store/hooks/easyPeasy\";\nconst { Option } = Select;\n\nexport interface SelectDistrict {\n  onChange?: any;\n  selected?: any;\n  defaultSelected?: any;\n  style?: any\n}\n\nexport const SelectDistrict = ({\n  onChange,\n  selected,\n  defaultSelected,\n  style\n}: SelectDistrict) => {\n  const districtList = useStoreState((state) => state.common.districtList);\n  const districtListFetch = useStoreActions((state) => state.common.districtListFetch);\n  const thanaListFetch = useStoreActions((state) => state.common.thanaListFetch);\n  if (districtList === null) {\n    districtListFetch();\n  }\n\n  const onSelect = (districtsId) => {\n    if (districtList) {\n      const distrcit = districtList.find((item) => item.districtId === districtsId);\n      onChange(distrcit);\n    }\n  };\n\n  React.useEffect(() => {\n    if (selected) {\n      thanaListFetch(selected?.districtId);\n    }\n  }, [selected])\n\n\n  return (\n    <Select\n      onChange={onSelect}\n      // loading={loading}\n      showSearch\n      // allowClear\n      defaultValue={defaultSelected}\n      value={selected?.districtId}\n      style={style}\n      placeholder=\"Select District\"\n      filterOption={(input, option) =>\n        option !== undefined &&\n        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {districtList ? (\n        districtList.map((type, idx) => (\n          <Option key={type.districtId} value={type.districtId}>\n            {type.districtName}\n          </Option>\n        ))\n      ) : (\n        <Option value=\"fetching\">Fetching District</Option>\n      )}\n    </Select>\n  );\n};\n","import { Select } from \"antd\";\nimport * as React from \"react\";\nimport { useStoreActions, useStoreState } from \"../../store/hooks/easyPeasy\";\nconst { Option } = Select;\n\nexport interface SelectThana {\n  onChange?: any;\n  selected?: any;\n  defaultSelected?: any;\n  style?: any\n}\n\nexport const SelectThana = ({\n  onChange,\n  selected,\n  defaultSelected,\n  style\n}: SelectThana) => {\n  const thanaList = useStoreState((state) => state.common.thanaList);\n  // const districtListFetch = useStoreActions((state) => state.common.districtListFetch);\n  // const thanaListFetch = useStoreActions((state) => state.common.thanaListFetch);\n\n\n  const onSelect = (thanaId) => {\n    if (thanaList) {\n      const thana = thanaList.find((item) => item.thanaId === thanaId);\n      onChange(thana);\n    }\n  };\n\n  // React.useEffect(() => {\n  //   if (selected) {\n  //     thanaListFetch(selected?.districtId);\n  //   }\n  // }, [selected])\n\n\n  return (\n    <Select\n      onChange={onSelect}\n      // loading={loading}\n      showSearch\n      allowClear\n      defaultValue={defaultSelected}\n      value={selected?.thanaId}\n      style={style}\n      placeholder=\"Select Thana\"\n      filterOption={(input, option) =>\n        option !== undefined &&\n        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {thanaList ? (\n        thanaList.map((type, idx) => (\n          <Option key={type.thanaId} value={type.thanaId}>\n            {type.thanaName}\n          </Option>\n        ))\n      ) : (\n        <Option value=\"fetching\">Fetching Thana</Option>\n      )}\n    </Select>\n  );\n};\n","import { DeleteOutlined, TeamOutlined } from '@ant-design/icons'\r\nimport { Button, Card, Col, Form, Modal, Popconfirm, Row, Select, Space, Table, Tooltip } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useStoreActions, useStoreState } from '../../../store/hooks/easyPeasy'\r\nimport { SelectDistrict } from '../../select/SelectDistrict'\r\nimport { SelectThana } from '../../select/SelectThana'\r\nconst { Option } = Select;\r\n\r\nexport default function PendingListSuperAdmin(props) {\r\n\r\n    const pendingList = useStoreState(state => state.partner.pendingList);\r\n    const underPartnerList = useStoreState(state => state.partner.underPartnerList);\r\n    const fetchPendingList = useStoreActions(state => state.partner.fetchPendingList);\r\n    const fetchpartnerListByLevel = useStoreActions(state => state.partner.fetchpartnerListByLevel);\r\n    const partnerAssign = useStoreActions(state => state.partner.partnerAssign);\r\n    const applicantPartnerDelete = useStoreActions(state => state.partner.applicantPartnerDelete);\r\n    const [assignForm] = Form.useForm();\r\n\r\n    useEffect(() => {\r\n        fetchPendingList();\r\n        setPageTitle();\r\n    }, [])\r\n\r\n    const setPageTitle = () => {\r\n        var pageTitleEle = document.getElementById('pageTitle');\r\n        var pageTitle = 'Pending Applied'\r\n        return pageTitleEle ?  pageTitleEle.innerHTML = pageTitle : ''      \r\n    }\r\n\r\n    const onchangePartnerLevel = (val) => {\r\n        // console.log(val)\r\n        fetchpartnerListByLevel(val)\r\n        assignForm.setFieldsValue({\r\n            under_partner: null,\r\n        });\r\n    };\r\n    const [assignModal, setassignModal] = useState<boolean>(false)\r\n\r\n    const onchangeDistrict = (val) => {\r\n        //   console.log(val)\r\n        setThanaId(null);\r\n        setdisId(val)\r\n    };\r\n    const [disId, setdisId] = useState<any>(null);\r\n\r\n    const onchangeThana = (val) => {\r\n        //   console.log(val)\r\n        setThanaId(val)\r\n    };\r\n    const [thanaId, setThanaId] = useState<any>(null);\r\n    const [rowId, setRowID] = useState<any>(null);\r\n\r\n\r\n    const [underPartnerid, setunderPartnerid] = useState<any>(null);\r\n\r\n    const onchangeUnderPartnerLevel = (val) => {\r\n        setunderPartnerid(val)\r\n    };\r\n\r\n\r\n    const assignFormSubmit = (value) => {\r\n        let postsubmit: any = {};\r\n        postsubmit.areaId = value?.thana_id?.thanaId;\r\n        postsubmit.parentId = value?.under_partner;\r\n        postsubmit.partnerId = rowId;\r\n        postsubmit.partnerLevel = parseInt(value?.partner_level);\r\n        // console.log(postsubmit);\r\n        partnerAssign(postsubmit);\r\n        setassignModal(false);\r\n    };\r\n\r\n    const deletePartner = value => {\r\n        applicantPartnerDelete(value)\r\n    }\r\n    const columns = [\r\n        {\r\n            title: 'Applicant Name',\r\n            dataIndex: 'applicantName',\r\n            key: 'applicantName',\r\n        },\r\n        {\r\n            title: 'Mobile No.',\r\n            dataIndex: 'mobileNo',\r\n            key: 'mobileNo',\r\n        },        \r\n        {\r\n            title: 'Designation',\r\n            dataIndex: 'designation',\r\n            key: 'designation',\r\n        },\r\n        {\r\n            title: 'Comapny Name',\r\n            dataIndex: 'companyName',\r\n            key: 'companyName',\r\n        },\r\n        {\r\n            title: 'Comapny Address',\r\n            dataIndex: 'companyAddress',\r\n            key: 'companyAddress',\r\n        },\r\n        {\r\n            title: 'Zilla',\r\n            dataIndex: 'zilla',\r\n            key: 'zilla',\r\n        },\r\n        {\r\n            title: 'Thana',\r\n            dataIndex: 'thana',\r\n            key: 'thana',\r\n        },\r\n        {\r\n            title: 'Assign',\r\n            render: (text: any, record: any, index) => (\r\n                <Space size=\"middle\">\r\n                    <Tooltip title=\"Assign Partner\">\r\n                        <Button type=\"primary\" icon={<TeamOutlined />} onClick={() => { (setassignModal(true)); setRowID(record?.partnerId) }}>Assign</Button>\r\n                    </Tooltip>\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Action',\r\n            render: (text: any, record: any, index) => (\r\n                <Space size=\"middle\">\r\n\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this?\"\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                        onConfirm={() => deletePartner(record?.partnerId)}\r\n                    >\r\n                        <Tooltip title=\"Delete\">\r\n                            <Button danger icon={<DeleteOutlined />} />\r\n                        </Tooltip>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <Card title=\"Pending Applied List\" >\r\n                <Table bordered={true} dataSource={pendingList} columns={columns} />\r\n                <Modal\r\n                    title=\"Assign Partner\"\r\n                    centered\r\n                    visible={assignModal}\r\n                    onOk={() => (setassignModal(false))}\r\n                    onCancel={() => (setassignModal(false))}\r\n                    cancelButtonProps={{ style: { display: 'none' } }}\r\n                    okButtonProps={{ style: { display: 'none' } }}\r\n                >\r\n                    <Form\r\n                        layout=\"vertical\"\r\n                        onFinish={assignFormSubmit}\r\n                        id=\"basic-info\"\r\n                        form={assignForm}\r\n                    >\r\n                        <Row gutter={8}>\r\n                            <Col xs={24} sm={24} md={24} lg={11} xl={11}>\r\n                                <Form.Item\r\n                                    name=\"partner_level\"\r\n                                    label=\"Partner Level:\"\r\n                                    className=\"title-Text\"\r\n                                    rules={[\r\n                                        { required: true, message: \"Please select level\" },\r\n                                    ]}\r\n                                >\r\n                                    <Select placeholder=\"Select Under Partner\" allowClear onChange={onchangePartnerLevel}>\r\n                                        <Option value=\"2\">PIP</Option>\r\n                                        <Option value=\"3\">APIP</Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={24} lg={1} xl={1}></Col>\r\n\r\n                            <Col xs={24} sm={24} md={24} lg={11} xl={11}>\r\n                                <Form.Item\r\n                                    name=\"under_partner\"\r\n                                    label=\"Under Partner:\"\r\n                                    className=\"title-Text\"\r\n                                    rules={[\r\n                                        { required: true, message: \"Please select under partner\" },\r\n                                    ]}\r\n                                >\r\n                                    <Select placeholder=\"Select Under Partner\" allowClear options={underPartnerList} value={underPartnerid} onChange={onchangeUnderPartnerLevel}>\r\n\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                            <Col xs={24} sm={24} md={24} lg={11} xl={11}>\r\n                                <Form.Item\r\n                                    name=\"district_id\"\r\n                                    label=\"District:\"\r\n                                    className=\"title-Text\"\r\n                                    rules={[\r\n                                        { required: true, message: \"Please select your district\" },\r\n                                    ]}\r\n                                >\r\n                                    <SelectDistrict onChange={(val) => onchangeDistrict(val)} selected={disId}\r\n\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={24} lg={1} xl={1}></Col>\r\n\r\n                            <Col xs={24} sm={24} md={24} lg={11} xl={11}>\r\n                                <Form.Item\r\n                                    name=\"thana_id\"\r\n                                    label=\"Area:\"\r\n                                    className=\"title-Text\"\r\n                                    rules={[\r\n                                        { required: true, message: \"Please select your area\" },\r\n                                    ]}\r\n                                >\r\n                                    <SelectThana onChange={(val) => onchangeThana(val)} selected={thanaId}\r\n\r\n                                    />\r\n                                </Form.Item>\r\n\r\n                            </Col>\r\n                        </Row>\r\n                        <Space size=\"small\" style={{ float: \"right\" }}>\r\n                            <Button type=\"primary\" htmlType=\"submit\" >\r\n                                Assign\r\n                                </Button>\r\n                        </Space>\r\n                        <br />\r\n                    </Form>\r\n\r\n                </Modal>\r\n            </Card>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import { DeleteOutlined, TeamOutlined } from '@ant-design/icons'\r\nimport { Button, Card, Col, Form, Modal, Popconfirm, Row, Select, Space, Table, Tooltip } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useStoreActions, useStoreState } from '../../../store/hooks/easyPeasy'\r\n\r\n\r\nexport default function OrderListSuperAdmin(props) {\r\n\r\n    const pendingProductOrderList = useStoreState(state => state.order.pendingProductOrderList);\r\n\r\n    const fetchpendingProductOrderList = useStoreActions(state => state.order.fetchpendingProductOrderList);\r\n\r\n    const deleteProductOrder = useStoreActions(state => state.order.deleteProductOrder);\r\n    const preApproveProductOrderPost = useStoreActions(state => state.order.preApproveProductOrderPost);\r\n\r\n\r\n    useEffect(() => {\r\n        fetchpendingProductOrderList();\r\n        setPageTitle();\r\n    }, [])\r\n\r\n    const setPageTitle = () => {\r\n        var pageTitleEle = document.getElementById('pageTitle');\r\n        var pageTitle = 'Pending Order'\r\n        return pageTitleEle ?  pageTitleEle.innerHTML = pageTitle : ''      \r\n    }\r\n\r\n    const deletePartner = value => {\r\n        deleteProductOrder(value)\r\n    }\r\n    const columns = [\r\n        {\r\n            title: 'Product Name',\r\n            dataIndex: 'productName',\r\n            key: 'productName',\r\n        },\r\n        {\r\n            title: 'Package Name',\r\n            dataIndex: 'packageName',\r\n            key: 'packageName',\r\n        },\r\n        {\r\n            title: 'Partner Name',\r\n            dataIndex: 'partnerName',\r\n            key: 'partnerName',\r\n        },\r\n        {\r\n            title: 'Partner Area',\r\n            dataIndex: 'area',\r\n            key: 'area',\r\n        },\r\n        {\r\n            title: 'Client Name',\r\n            dataIndex: 'clientName',\r\n            key: 'clientName',\r\n        },\r\n        {\r\n            title: 'Category',\r\n            dataIndex: 'category',\r\n            key: 'category',\r\n        },\r\n        {\r\n            title: 'Address',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n        },\r\n        {\r\n            title: 'Admin Name',\r\n            dataIndex: 'adminName',\r\n            key: 'adminName',\r\n        },\r\n        {\r\n            title: 'Contact No',\r\n            dataIndex: 'contactNo',\r\n            key: 'contactNo',\r\n        },\r\n        {\r\n            title: 'Order Date',\r\n            dataIndex: 'orderDate',\r\n            key: 'orderDate',\r\n        },\r\n        {\r\n            title: 'Approve',\r\n            render: (text: any, record: any, index) => (\r\n                <Space size=\"middle\">\r\n                    <Tooltip title=\"Pre-Approve Order\">\r\n                        <Button type=\"primary\" icon={<TeamOutlined />} onClick={() => preApproveProductOrderPost(record?.orderId)}>Pre-Approve</Button>\r\n                    </Tooltip>\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Action',\r\n            render: (text: any, record: any, index) => (\r\n                <Space size=\"middle\">\r\n\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this?\"\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                        onConfirm={() => deletePartner(record?.orderId)}\r\n                    >\r\n                        <Tooltip title=\"Delete\">\r\n                            <Button danger icon={<DeleteOutlined />} />\r\n                        </Tooltip>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <Card title=\"Pending Order List\" >\r\n                <Table bordered={true} dataSource={pendingProductOrderList} columns={columns} />\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n","import { DeleteOutlined, TeamOutlined } from '@ant-design/icons'\r\nimport { Button, Card, Col, Form, Modal, Popconfirm, Row, Select, Space, Table, Tooltip } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useStoreActions, useStoreState } from '../../../store/hooks/easyPeasy'\r\n\r\n\r\nexport default function OrderListSuperAdmin(props) {\r\n\r\n    const preApproveProductOrderList = useStoreState(state => state.order.preApproveProductOrderList);\r\n\r\n    const fetchpreApproveProductOrderList = useStoreActions(state => state.order.fetchpreApproveProductOrderList);\r\n\r\n    const deleteProductOrder = useStoreActions(state => state.order.deleteProductOrder);\r\n    const approveProductOrder = useStoreActions(state => state.order.approveProductOrder);\r\n\r\n\r\n    useEffect(() => {\r\n        fetchpreApproveProductOrderList();\r\n        setPageTitle();\r\n    }, [])\r\n\r\n    const setPageTitle = () => {\r\n        var pageTitleEle = document.getElementById('pageTitle');\r\n        var pageTitle = 'Pre-approve Order'\r\n        return pageTitleEle ?  pageTitleEle.innerHTML = pageTitle : ''      \r\n    }\r\n\r\n    const deletePartner = value => {\r\n        deleteProductOrder(value)\r\n    }\r\n    const columns = [\r\n        {\r\n            title: 'Product Name',\r\n            dataIndex: 'productName',\r\n            key: 'productName',\r\n        },\r\n        {\r\n            title: 'Package Name',\r\n            dataIndex: 'packageName',\r\n            key: 'packageName',\r\n        },\r\n        {\r\n            title: 'Partner Name',\r\n            dataIndex: 'partnerName',\r\n            key: 'partnerName',\r\n        },\r\n        {\r\n            title: 'Partner Area',\r\n            dataIndex: 'area',\r\n            key: 'area',\r\n        },\r\n        {\r\n            title: 'Client Name',\r\n            dataIndex: 'clientName',\r\n            key: 'clientName',\r\n        },\r\n        {\r\n            title: 'Category',\r\n            dataIndex: 'category',\r\n            key: 'category',\r\n        },\r\n        {\r\n            title: 'Address',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n        },\r\n        {\r\n            title: 'Admin Name',\r\n            dataIndex: 'adminName',\r\n            key: 'adminName',\r\n        },\r\n        {\r\n            title: 'Contact No',\r\n            dataIndex: 'contactNo',\r\n            key: 'contactNo',\r\n        },\r\n        {\r\n            title: 'Order Date',\r\n            dataIndex: 'orderDate',\r\n            key: 'orderDate',\r\n        },\r\n        {\r\n            title: 'Approve',\r\n            render: (text: any, record: any, index) => (\r\n                <Space size=\"middle\">\r\n                    <Tooltip title=\"Approve Order\">\r\n                        <Button type=\"primary\" icon={<TeamOutlined />} onClick={() => approveProductOrder(record?.orderId)}>Approve</Button>\r\n                    </Tooltip>\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Action',\r\n            render: (text: any, record: any, index) => (\r\n                <Space size=\"middle\">\r\n\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this?\"\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                        onConfirm={() => deletePartner(record?.orderId)}\r\n                    >\r\n                        <Tooltip title=\"Delete\">\r\n                            <Button danger icon={<DeleteOutlined />} />\r\n                        </Tooltip>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <Card title=\"Pre-approve Order List\">\r\n                <Table bordered={true} dataSource={preApproveProductOrderList} columns={columns} />\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n","import { Select } from \"antd\";\r\nimport * as React from \"react\";\r\nimport { useStoreActions, useStoreState } from \"../../store/hooks/easyPeasy\";\r\nconst { Option } = Select;\r\n\r\nexport interface SelectProduct {\r\n  onChange?: any;\r\n  selected?: any;\r\n  defaultSelected?: any;\r\n  style?: any\r\n}\r\n\r\nexport const SelectProduct = ({\r\n  onChange,\r\n  selected,\r\n  defaultSelected,\r\n  style\r\n}: SelectProduct) => {\r\n  const itemList = useStoreState((state) => state.order.productList);\r\n  const itemListFetch = useStoreActions((state) => state.order.fetchproductList);\r\n  const fetchclientList = useStoreActions((state) => state.order.fetchclientList);\r\n  const fetchpackageListByProductId = useStoreActions((state) => state.order.fetchpackageListByProductId);\r\n\r\n  React.useEffect(() => {\r\n    itemListFetch();\r\n  }, [])\r\n\r\n  const onSelect = (id) => {\r\n    if (itemList) {\r\n      const val = itemList.find((item) => item.productId === id);\r\n      onChange(val);\r\n      console.log(val)\r\n      fetchclientList(val?.productId);\r\n    }\r\n  };\r\n\r\n\r\n  React.useEffect(() => {\r\n    if (selected) {\r\n      fetchpackageListByProductId(selected?.productId);\r\n    }\r\n  }, [selected])\r\n\r\n  return (\r\n    <Select\r\n      onChange={onSelect}\r\n      // loading={loading}\r\n      showSearch\r\n      allowClear\r\n      defaultValue={defaultSelected}\r\n      value={selected?.productId}\r\n      style={style}\r\n      placeholder=\"Select Product\"\r\n      filterOption={(input, option) =>\r\n        option !== undefined &&\r\n        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n      }\r\n    >\r\n      {itemList ? (\r\n        itemList.map((type, idx) => (\r\n          <Option key={type.productId} value={type.productId}>\r\n            {type.productName}\r\n          </Option>\r\n        ))\r\n      ) : (\r\n        <Option value=\"fetching\">Fetching Products</Option>\r\n      )}\r\n    </Select>\r\n  );\r\n};\r\n","import { Select } from \"antd\";\r\nimport * as React from \"react\";\r\nimport { useStoreActions, useStoreState } from \"../../store/hooks/easyPeasy\";\r\nconst { Option } = Select;\r\n\r\nexport interface SelectPackage {\r\n  onChange?: any;\r\n  selected?: any;\r\n  defaultSelected?: any;\r\n  style?: any\r\n}\r\n\r\nexport const SelectPackage = ({\r\n  onChange,\r\n  selected,\r\n  defaultSelected,\r\n  style\r\n}: SelectPackage) => {\r\n\r\n  const itemList = useStoreState((state) => state.order.packageListByProductId);\r\n  const onSelect = (id) => {\r\n    if (itemList) {\r\n      const val = itemList.find((item) => item.packageId === id);\r\n      onChange(val);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      onChange={onSelect}\r\n      // loading={loading}\r\n      showSearch\r\n      // allowClear\r\n      defaultValue={defaultSelected}\r\n      value={selected?.packageId}\r\n      style={style}\r\n      placeholder=\"Select Package\"\r\n      filterOption={(input, option) =>\r\n        option !== undefined &&\r\n        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n      }\r\n    >\r\n      {itemList ? (\r\n        itemList.map((type, idx) => (\r\n          <Option key={type.packageId} value={type.packageId}>\r\n            {type.packageName}\r\n          </Option>\r\n        ))\r\n      ) : (\r\n        <Option value=\"fetching\">Fetching Packages</Option>\r\n      )}\r\n    </Select>\r\n  );\r\n};\r\n","import { Select } from \"antd\";\r\nimport * as React from \"react\";\r\nimport { useStoreActions, useStoreState } from \"../../store/hooks/easyPeasy\";\r\nconst { Option } = Select;\r\n\r\nexport interface SelectCategoryOrg {\r\n  onChange?: any;\r\n  selected?: any;\r\n  defaultSelected?: any;\r\n  style?: any\r\n}\r\n\r\nexport const SelectCategoryOrg = ({\r\n  onChange,\r\n  selected,\r\n  defaultSelected,\r\n  style\r\n}: SelectCategoryOrg) => {\r\n  const selectedCat = useStoreState((state) => state.order.selectedCat);\r\n\r\n  const [itemList, setitemList] = React.useState<any>([]);\r\n\r\n  React.useEffect(() => {\r\n    if (selectedCat === \"Education\") {\r\n      setitemList([\r\n        {\r\n          id: 'Primary School',\r\n          value: 'Primary School'\r\n        },\r\n        {\r\n          id: 'High School',\r\n          value: 'High School'\r\n        },\r\n        {\r\n          id: 'College',\r\n          value: 'College'\r\n        },\r\n      ])\r\n    } else if (selectedCat === \"Business\") {\r\n      setitemList([\r\n        {\r\n          id: 'Restuarant',\r\n          value: 'Restuarant'\r\n        },\r\n        {\r\n          id: 'Super Shop',\r\n          value: 'Super Shop'\r\n        },\r\n        {\r\n          id: 'Computer Shop',\r\n          value: 'Computer Shop'\r\n        },\r\n        {\r\n          id: 'Mobile Shop',\r\n          value: 'Mobile Shop'\r\n        },\r\n        {\r\n          id: 'Clothing Store',\r\n          value: 'Clothing Store'\r\n        },\r\n        {\r\n          id: 'Medicine Shop',\r\n          value: 'Medicine Shop'\r\n        },\r\n        {\r\n          id: 'Bakery Shop',\r\n          value: 'Bakery Shop'\r\n        },\r\n        {\r\n          id: 'Computer Servicing',\r\n          value: 'Computer Servicing'\r\n        },\r\n        {\r\n          id: 'Cosmetics Shop',\r\n          value: 'Cosmetics Shop'\r\n        },\r\n        {\r\n          id: 'Electronics Shop',\r\n          value: 'Electronics Shop'\r\n        },\r\n        {\r\n          id: 'Internet Service Provider(ISP)',\r\n          value: 'Internet Service Provider(ISP)'\r\n        },\r\n        {\r\n          id: 'Dish Service Provider',\r\n          value: 'Dish Service Provider'\r\n        },\r\n        {\r\n          id: 'Sweets Shop',\r\n          value: 'Sweets Shop'\r\n        }\r\n      ])\r\n    } else if (selectedCat === \"NGO\") {\r\n      setitemList([\r\n        {\r\n          id: 'NGO',\r\n          value: 'NGO'\r\n        },\r\n      ])\r\n    }\r\n  }, [selectedCat])\r\n\r\n\r\n\r\n  const onSelect = (id) => {\r\n    if (itemList) {\r\n      const val = itemList.find((item) => item.id === id);\r\n      onChange(val);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      onChange={onSelect}\r\n      // loading={loading}\r\n      showSearch\r\n      // allowClear\r\n      defaultValue={defaultSelected}\r\n      value={selected?.id}\r\n      style={style}\r\n      placeholder=\"Select Category\"\r\n      filterOption={(input, option) =>\r\n        option !== undefined &&\r\n        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n      }\r\n    >\r\n      {itemList ? (\r\n        itemList.map((type, idx) => (\r\n          <Option key={type.id} value={type.id}>\r\n            {type.value}\r\n          </Option>\r\n        ))\r\n      ) : (\r\n        <Option value=\"fetching\">Fetching Categories</Option>\r\n      )}\r\n    </Select>\r\n  );\r\n};\r\n","import { Select } from \"antd\";\nimport * as React from \"react\";\nimport { useStoreActions, useStoreState } from \"../../store/hooks/easyPeasy\";\nconst { Option } = Select;\n\nexport interface SelectTypeOrg {\n  onChange?: any;\n  selected?: any;\n  defaultSelected?: any;\n  style?: any\n}\n\nexport const SelectTypeOrg = ({\n  onChange,\n  selected,\n  defaultSelected,\n  style\n}: SelectTypeOrg) => {\n  //const itemList = useStoreState((state) => state.common.districtList);\n  const itemList = [\n    {\n      id: \"Education\",\n      value: 'Education'\n    },\n    {\n      id: \"Business\",\n      value: 'Business'\n    },\n    {\n      id: \"NGO\",\n      value: 'NGO'\n    },\n  ];\n  // const itemListFetch = useStoreActions((state) => state.common.itemListFetch);\n   const setselectedCat = useStoreActions((state) => state.order.setselectedCat);\n  // if (itemList === null) {\n  //   itemListFetch();\n  // }\n\n  const onSelect = (id) => {\n    setselectedCat(id);\n    if (itemList) {\n      const val = itemList.find((item) => item.id === id);\n      onChange(val);\n    }\n  };\n\n\n\n\n  return (\n    <Select\n      onChange={onSelect}\n      // loading={loading}\n      showSearch\n      // allowClear\n      defaultValue={defaultSelected}\n      value={selected?.id}\n      style={style}\n      placeholder=\"Select Type\"\n      filterOption={(input, option) =>\n        option !== undefined &&\n        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {itemList ? (\n        itemList.map((type, idx) => (\n          <Option key={type.id} value={type.id}>\n            {type.value}\n          </Option>\n        ))\n      ) : (\n        <Option value=\"fetching\">Fetching Type</Option>\n      )}\n    </Select>\n  );\n};\n","import { Select } from \"antd\";\nimport * as React from \"react\";\nimport { useStoreActions, useStoreState } from \"../../store/hooks/easyPeasy\";\nconst { Option } = Select;\n\nexport interface SelectBillCycle {\n  onChange?: any;\n  selected?: any;\n  defaultSelected?: any;\n  style?: any\n}\n\nexport const SelectBillCycle = ({\n  onChange,\n  selected,\n  defaultSelected,\n  style\n}: SelectBillCycle) => {\n  //const itemList = useStoreState((state) => state.common.districtList);\n  const itemList = [\n    {\n      id: 'Yearly',\n      value: 'Yearly'\n    },\n    {\n      id: 'Monthly',\n      value: 'Monthly'\n    },\n  ];\n  // const itemListFetch = useStoreActions((state) => state.common.itemListFetch);\n  // const itemFetch = useStoreActions((state) => state.common.itemFetch);\n  // if (itemList === null) {\n  //   itemListFetch();\n  // }\n\n  const onSelect = (id) => {\n    if (itemList) {\n      const val = itemList.find((item) => item.id === id);\n      onChange(val);\n    }\n  };\n\n\n\n\n  return (\n    <Select\n      onChange={onSelect}\n      // loading={loading}\n      showSearch\n      // allowClear\n      defaultValue={defaultSelected}\n      value={selected?.id}\n      style={style}\n      placeholder=\"Select Bill Cycle\"\n      filterOption={(input, option) =>\n        option !== undefined &&\n        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {itemList ? (\n        itemList.map((type, idx) => (\n          <Option key={type.id} value={type.id}>\n            {type.value}\n          </Option>\n        ))\n      ) : (\n        <Option value=\"fetching\">Fetching Bill Cycle</Option>\n      )}\n    </Select>\n  );\n};\n","import { Button, Col, DatePicker, Form, Input, Result, Row, Space, Card } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { SelectDistrict } from '../../select/SelectDistrict'\r\nimport { SelectThana } from '../../select/SelectThana'\r\nimport { SelectProduct } from '../../select/SelectProduct'\r\nimport { SelectPackage } from '../../select/SelectPackage'\r\nimport { SelectCategoryOrg } from '../../select/SelectCategoryOrg'\r\nimport { SelectTypeOrg } from '../../select/SelectTypeOrg'\r\nimport { SelectBillCycle } from '../../select/SelectBillCycle'\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStoreActions, useStoreState } from '../../../store/hooks/easyPeasy'\r\n\r\n\r\nexport default function OrderFormPartner(props) {\r\n\r\n    const [orderForm] = Form.useForm();\r\n    const postsaveProductOrder = useStoreActions(state => state.order.postsaveProductOrder);\r\n    const ordersuccess = useStoreState(state => state.order.ordersuccess);\r\n    const setordersuccess = useStoreActions(state => state.order.setordersuccess);\r\n    useEffect(() => {\r\n        setordersuccess(false);\r\n        setTimeout(function () {\r\n            setPageTitle();\r\n        })\r\n    }, [])\r\n    const orderFormSubmit = (value) => {\r\n        //console.log(value)\r\n        let postData: any = {};\r\n        postData.adminName = value?.admin_name;\r\n        postData.aggreementEndDate = moment(value?.aed).format(\"YYYY-MM-DD\");\r\n        postData.agreementDate = moment(value?.ad).format(\"YYYY-MM-DD\");\r\n        postData.billCycle = value?.bill_cycle?.value;\r\n        postData.clientAddress = value?.village + ', ' + value?.post_office;\r\n        postData.clientName = value?.insName;\r\n        postData.contactNo = value?.personal_number;\r\n        postData.email = value?.email;\r\n        postData.handOverDate = moment(value?.hod).format(\"YYYY-MM-DD\");\r\n        postData.numberOfStaff = value?.number_staff;\r\n        postData.numberOfStudent = value?.number_student;\r\n        postData.organizationCategory = value?.ins_category?.value;\r\n        postData.organizationType = value?.ins_type?.value;\r\n        postData.packageId = value?.package_id?.packageId;\r\n        postData.productId = value?.product_id?.productId;\r\n        postData.thanaId = value?.thana_id?.thanaId;\r\n\r\n        console.log(postData);\r\n        //  console.log(\"jj\")\r\n        postsaveProductOrder(postData);\r\n    };\r\n    const onchangeDistrict = (val) => {\r\n        //   console.log(val)\r\n        setThanaId(null);\r\n        setdisId(val);\r\n    }\r\n    const [disId, setdisId] = useState<any>(null);\r\n\r\n    const onchangeThana = (val) => {\r\n        //   console.log(val)\r\n        setThanaId(val);\r\n    }\r\n    const layout = {\r\n        labelCol: { span: 6 },\r\n        wrapperCol: { span: 18 },\r\n    };\r\n    const [thanaId, setThanaId] = useState<any>(null);\r\n    const [productId, setProductId] = useState<any>(null);\r\n    const [packageId, setPackageId] = useState<any>(null);\r\n    const [selectOrgType, setSelectOrgType] = useState<any>(null);\r\n    const [selectOrgCat, setSelectOrgCat] = useState<any>(null);\r\n    const [billCycle, setBillCycle] = useState<any>(null);\r\n\r\n    const onchangeproductId = (val) => {\r\n        setProductId(val);\r\n        setPackageId(null);\r\n        orderForm.setFieldsValue({\r\n            package_id: null,\r\n        });\r\n    }\r\n    const onchangepackageId = (val) => {\r\n        setPackageId(val)\r\n    }\r\n    const onchangeselectOrgType = (val) => {\r\n        setSelectOrgCat(null)\r\n        setSelectOrgType(val)\r\n    }\r\n    const onchangeselectOrgCat = (val) => {\r\n        setSelectOrgCat(val)\r\n    }\r\n    const onchangebillCycle = (val) => {\r\n        setBillCycle(val)\r\n    }\r\n    const setPageTitle = () => {\r\n        var pageTitleEle = document.getElementById('pageTitle');\r\n        var pageTitle = 'Order Form'\r\n        return pageTitleEle ?  pageTitleEle.innerHTML = pageTitle : ''      \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card title=\"Order Form\" >\r\n                {!ordersuccess && <>\r\n                    <Form\r\n                        layout=\"horizontal\"\r\n                        {...layout}\r\n                        onFinish={orderFormSubmit}\r\n                        id=\"basic-info\"\r\n                        form={orderForm}\r\n                    >\r\n                        <div className=\"__orderForm p-0 custom-form\">\r\n                            <Row gutter={8}>\r\n                                <Col xs={24} sm={24} md={24} lg={16} xl={16}>\r\n                                    <Form.Item\r\n                                        name=\"product_id\"\r\n                                        label=\"Product:\"\r\n                                        className=\"title-Text\"\r\n                                        rules={[\r\n                                            { required: true, message: \"Please select your product\" },\r\n                                        ]}\r\n                                    >\r\n                                        <SelectProduct onChange={(val) => onchangeproductId(val)} selected={productId}\r\n\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={24} lg={16} xl={16}>\r\n                                    <Form.Item\r\n                                        name=\"package_id\"\r\n                                        label=\"Package:\"\r\n                                        className=\"title-Text\"\r\n                                        rules={[\r\n                                            { required: true, message: \"Please select your package\" },\r\n                                        ]}\r\n                                    >\r\n                                        <SelectPackage onChange={(val) => onchangepackageId(val)} selected={packageId}\r\n\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={24} lg={16} xl={16}>\r\n                                    <Form.Item\r\n                                        name=\"insName\"\r\n                                        label=\"Institute/Organization Name:\"\r\n                                        className=\"title-Text\"\r\n                                        rules={[\r\n                                            { required: true, message: \"Please insert institute name\" },\r\n                                        ]}\r\n                                    >\r\n                                        <Input type=\"text\" placeholder=\"Institute Name\"></Input>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={24} lg={16} xl={16}>\r\n                                    <Form.Item\r\n                                        name=\"village\"\r\n                                        label=\"Village:\"\r\n                                        className=\"title-Text\"\r\n                                    >\r\n                                        <Input type=\"text\" placeholder=\"Enter village\"></Input>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={24} lg={16} xl={16}>\r\n                                    <Form.Item\r\n                                        name=\"post_office\"\r\n                                        label=\"Post Office:\"\r\n                                        className=\"title-Text\"\r\n                                    >\r\n                                        <Input type=\"text\" placeholder=\"Enter post office\"></Input>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={24} lg={16} xl={16}>\r\n                                    <Form.Item\r\n                                        name=\"district_id\"\r\n                                        label=\"District:\"\r\n                                        className=\"title-Text\"\r\n                                        rules={[\r\n                                            { required: true, message: \"Please select your district\" },\r\n                                        ]}\r\n                                    >\r\n                                        <SelectDistrict onChange={(val) => onchangeDistrict(val)} selected={disId}\r\n\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={24} lg={16} xl={16}>\r\n                                    <Form.Item\r\n                                        name=\"thana_id\"\r\n                                        label=\"Thana:\"\r\n                                        className=\"title-Text\"\r\n                                        rules={[\r\n                                            { required: true, message: \"Please select your Thana\" },\r\n                                        ]}\r\n                                    >\r\n                                        <SelectThana onChange={(val) => onchangeThana(val)} selected={thanaId}\r\n\r\n                                        />\r\n                                    </Form.Item>\r\n\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={24} lg={16} xl={16}>\r\n                                    <Form.Item\r\n                                        name=\"admin_name\"\r\n                                        label=\"Admin Name:\"\r\n                                        className=\"title-Text\"\r\n                                        rules={[\r\n                                            { required: true, message: \"Please write admin name\" },\r\n                                        ]}\r\n                                    >\r\n                                        <Input type=\"text\" placeholder=\"Admin Name\"></Input>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={24} lg={16} xl={16}>\r\n                                    <Form.Item\r\n                                        name=\"personal_number\"\r\n                                        label=\"Contact:\"\r\n                                        className=\"title-Text\"\r\n\r\n                                        rules={[\r\n                                            { required: true, message: \"Please write your number\", },\r\n                                        ]}\r\n                                    >\r\n                                        <Input type=\"text\" placeholder=\"01711.....\"></Input>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={24} lg={16} xl={16}>\r\n                                    <Form.Item\r\n                                        name=\"email\"\r\n                                        label=\"Email:\"\r\n                                        className=\"title-Text\"\r\n                                        rules={[\r\n                                            { required: true, message: \"Please write your email address\" },\r\n                                            {\r\n                                                max: 60,\r\n                                                type: 'email',\r\n                                                message: \"Pleaset Insert valid email.\",\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input type=\"text\" placeholder=\"example@gmail.com\"></Input>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={24} lg={16} xl={16}>\r\n                                    <Form.Item\r\n                                        name=\"ins_type\"\r\n                                        label=\"Institute/Organization Type:\"\r\n                                        className=\"title-Text\"\r\n                                        rules={[\r\n                                            { required: true, message: \"Please select your type\" },\r\n                                        ]}\r\n                                    >\r\n                                        <SelectTypeOrg onChange={(val) => onchangeselectOrgType(val)} selected={selectOrgType}\r\n\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={24} lg={16} xl={16}>\r\n                                    <Form.Item\r\n                                        name=\"ins_category\"\r\n                                        label=\"Institute/Organization Category:\"\r\n                                        className=\"title-Text\"\r\n                                        rules={[\r\n                                            { required: true, message: \"Please select your category\" },\r\n                                        ]}\r\n                                    >\r\n                                        <SelectCategoryOrg onChange={(val) => onchangeselectOrgCat(val)} selected={selectOrgCat}\r\n\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={24} lg={16} xl={16}>\r\n                                    <Form.Item\r\n                                        name=\"bill_cycle\"\r\n                                        label=\"Bill Cycle:\"\r\n                                        className=\"title-Text\"\r\n                                        rules={[\r\n                                            { required: true, message: \"Please select bill cycle\" },\r\n                                        ]}\r\n                                    >\r\n                                        <SelectBillCycle onChange={(val) => onchangebillCycle(val)} selected={billCycle}\r\n\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={24} lg={16} xl={16}>\r\n                                    <Form.Item\r\n                                        name=\"ad\"\r\n                                        label=\"Aggrement Date:\"\r\n                                        className=\"title-Text\"\r\n                                        rules={[\r\n                                            { required: true, message: \"Please enter aggrement date\" },\r\n                                        ]}\r\n                                    >\r\n                                        <DatePicker placeholder=\"Aggrement Date\" style={{ width: \"100%\" }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={24} lg={16} xl={16}>\r\n                                    <Form.Item\r\n                                        name=\"hod\"\r\n                                        label=\"Hand over Date:\"\r\n                                        className=\"title-Text\"\r\n                                        rules={[\r\n                                            { required: true, message: \"Please enter hand over date\" },\r\n                                        ]}\r\n                                    >\r\n                                        <DatePicker placeholder=\"Hand over Date\" style={{ width: \"100%\" }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={24} lg={16} xl={16}>\r\n                                    <Form.Item\r\n                                        name=\"aed\"\r\n                                        label=\"Aggrement End Date:\"\r\n                                        className=\"title-Text\"\r\n                                        rules={[\r\n                                            { required: true, message: \"Please enter aggrement end date\" },\r\n                                        ]}\r\n                                    >\r\n                                        <DatePicker placeholder=\"Aggrement End Date\" style={{ width: \"100%\" }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                {selectOrgType?.value === \"Education\" &&\r\n                                    <>\r\n                                        <Col xs={24} sm={24} md={24} lg={16} xl={16}>\r\n                                            <Form.Item\r\n                                                name=\"number_student\"\r\n                                                label=\"Number of Student:\"\r\n                                                className=\"title-Text\"\r\n                                                rules={[\r\n                                                    { required: true, message: \"Please insert number of student\" },\r\n                                                ]}\r\n                                            >\r\n                                                <Input type=\"text\" placeholder=\"Number Of Student\"></Input>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={24} md={24} lg={16} xl={16}>\r\n                                            <Form.Item\r\n                                                name=\"number_staff\"\r\n                                                label=\"Number of Staff:\"\r\n                                                className=\"title-Text\"\r\n                                                rules={[\r\n                                                    { required: true, message: \"Please insert number of staff\" },\r\n                                                ]}\r\n                                            >\r\n                                                <Input type=\"text\" placeholder=\"Number Of Staff\"></Input>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </>\r\n                                }\r\n                                <Col xs={24} sm={24} md={24} lg={16} xl={16}>\r\n                                    <Space size=\"small\" style={{ float: \"right\" }}>\r\n                                        <Button type=\"primary\" htmlType=\"submit\" >\r\n                                            Submit\r\n                                        </Button>\r\n                                    </Space>\r\n                                </Col>\r\n                            </Row>                            \r\n                        </div>\r\n                    </Form>\r\n                </>}\r\n                {ordersuccess && <>\r\n                    <br />\r\n                    <Result\r\n                        status=\"success\"\r\n                        title=\"Your request has been submitted\"\r\n                        subTitle=\"You will get notified once you get approved by an admin.\"\r\n                        extra={[\r\n                            <Link to=\"/\">                    <Button type=\"primary\" key=\"console\">\r\n                                Back to Dashboard\r\n  </Button></Link>\r\n                        ]}\r\n                    />\r\n                </>\r\n                }\r\n            </Card>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { Button, Card, Col, DatePicker, Form, Input, Row, Select, Space } from 'antd'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { SelectProduct } from '../../select/SelectProduct'\r\nimport moment from \"moment\";\r\nimport { useStoreActions, useStoreState } from '../../../store/hooks/easyPeasy'\r\nimport { SelectBillCycle } from '../../select/SelectBillCycle';\r\n\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\nexport default function BillGenerateSuperAdmin(props) {\r\n\r\n    const saveProductBillGenerateMonthly = useStoreActions(state => state.bill.saveProductBillGenerateMonthly)\r\n    const [billgenerateForm] = Form.useForm();\r\n\r\n    const orderFormSubmit = (value) => {\r\n        //  console.log(value)\r\n        let postMonthly = {\r\n            customProductId: value?.product_id?.productId,\r\n            month: value?.month,\r\n            year: value?.year,\r\n        }\r\n        saveProductBillGenerateMonthly(postMonthly);\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        setPageTitle();\r\n    }, []);\r\n\r\n    const [productId, setProductId] = useState<any>(null);\r\n    const [billCycle, setBillCycle] = useState<any>(null);\r\n\r\n    const setPageTitle = () => {\r\n        var pageTitleEle = document.getElementById('pageTitle');\r\n        var pageTitle = 'Bill Generate Monthly'\r\n        return pageTitleEle ?  pageTitleEle.innerHTML = pageTitle : ''      \r\n    }\r\n\r\n    const onchangeproductId = (val) => {\r\n        setProductId(val);\r\n    }\r\n    const onchangebillCycle = (val) => {\r\n        //   console.log(val)\r\n        setBillCycle(val)\r\n    }\r\n\r\n    let year = new Date().getFullYear();\r\n\r\n    return (\r\n        <>\r\n            <Card title=\"Monthly Bill Generate Form\">\r\n                <Form\r\n                    layout=\"horizontal\"\r\n                    {...layout}\r\n                    onFinish={orderFormSubmit}\r\n                    id=\"basic-info\"\r\n                    form={billgenerateForm}\r\n                >\r\n                    <div className=\"__orderForm p-0 custom-form\">\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={24} lg={8} xl={8}>\r\n                                <Form.Item\r\n                                    name=\"product_id\"\r\n                                    label=\"Product:\"\r\n                                    className=\"title-Text\"\r\n                                    rules={[\r\n                                        { required: true, message: \"Please select your product\" },\r\n                                    ]}\r\n                                >\r\n                                    <SelectProduct onChange={(val) => onchangeproductId(val)} selected={productId}\r\n\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {/* \r\n                            <Col xs={24} sm={24} md={24} lg={16} xl={16}>    \r\n                                <Form.Item\r\n                                name=\"bill_cycle\"\r\n                                label=\"Bill Cycle:\"\r\n                                className=\"title-Text\"\r\n                                rules={[\r\n                                    { required: true, message: \"Please select bill cycle\" },\r\n                                ]}\r\n                            >\r\n                                <SelectBillCycle onChange={(val) => onchangebillCycle(val)} selected={billCycle}\r\n\r\n                                />\r\n                            </Form.Item> \r\n                            </Col>\r\n                            */}\r\n                        </Row> \r\n                        <Row>   \r\n                            <Col xs={24} sm={24} md={24} lg={8} xl={8}>\r\n                                <Form.Item\r\n                                    name=\"year\"\r\n                                    label=\"Year:\"\r\n                                    className=\"title-Text\"\r\n                                    initialValue={year}\r\n                                    rules={[\r\n                                        { required: true, message: \"Please select year\" },\r\n                                    ]}\r\n                                >\r\n                                    <Select placeholder=\"Select Year\" allowClear>\r\n                                        <Option value={year - 1}>{year - 1}</Option>\r\n                                        <Option value={year}>{year}</Option>\r\n                                        <Option value={year + 1}>{year + 1}</Option>\r\n                                    </Select>\r\n\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={24} lg={8} xl={8}>\r\n                                <Form.Item\r\n                                    name=\"month\"\r\n                                    label=\"Month:\"\r\n                                    className=\"title-Text\"\r\n                                    rules={[\r\n                                        { required: true, message: \"Please select month\" },\r\n                                    ]}\r\n                                >\r\n                                    <Select placeholder=\"Select Month\" allowClear>\r\n                                        <Option value=\"January\">January</Option>\r\n                                        <Option value=\"February\">February</Option>\r\n                                        <Option value=\"March\">March</Option>\r\n                                        <Option value=\"April\">April</Option>\r\n                                        <Option value=\"May\">May</Option>\r\n                                        <Option value=\"June\">June</Option>\r\n                                        <Option value=\"July\">July</Option>\r\n                                        <Option value=\"August\">August</Option>\r\n                                        <Option value=\"September\">September</Option>\r\n                                        <Option value=\"October\">October</Option>\r\n                                        <Option value=\"November\">November</Option>\r\n                                        <Option value=\"December\">December</Option>\r\n                                    </Select>\r\n\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={24} lg={8} xl={168}>\r\n                                <Space size=\"small\" className=\"pull-right\">\r\n                                    <Button type=\"primary\" htmlType=\"submit\" >\r\n                                        Generate\r\n                                    </Button>\r\n                                </Space>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Form>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n","import { Select } from \"antd\";\r\nimport * as React from \"react\";\r\nimport { useStoreActions, useStoreState } from \"../../store/hooks/easyPeasy\";\r\nconst { Option } = Select;\r\n\r\nexport interface SelectClient {\r\n  onChange?: any;\r\n  selected?: any;\r\n  defaultSelected?: any;\r\n  style?: any\r\n}\r\n\r\nexport const SelectClient = ({\r\n  onChange,\r\n  selected,\r\n  defaultSelected,\r\n  style\r\n}: SelectClient) => {\r\n\r\n  const clientList = useStoreState((state) => state.order.clientList);\r\n  const onSelect = (id) => {\r\n    if (clientList) {\r\n      const val = clientList.find((item) => item.clientId === id);\r\n      onChange(val);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      onChange={onSelect}\r\n      // loading={loading}\r\n      showSearch\r\n      // allowClear\r\n      defaultValue={defaultSelected}\r\n      value={selected?.clientId}\r\n      style={style}\r\n      placeholder=\"Select Client\"\r\n      filterOption={(input, option) =>\r\n        option !== undefined &&\r\n        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n      }\r\n    >\r\n      {clientList ? (\r\n        clientList.map((type, idx) => (\r\n          <Option key={type.clientId} value={type.clientId}>\r\n            {type.clientName}\r\n          </Option>\r\n        ))\r\n      ) : (\r\n        <Option value=\"fetching\">Fetching Clients</Option>\r\n      )}\r\n    </Select>\r\n  );\r\n};\r\n","import { Button, Card, Col, DatePicker, Form, Input, InputNumber, Row, Select, Space } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { SelectProduct } from '../../select/SelectProduct'\r\nimport moment from \"moment\";\r\nimport { useStoreActions, useStoreState } from '../../../store/hooks/easyPeasy'\r\nimport { SelectClient } from '../../select/SelectClient';\r\n\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\nexport default function BillGenerateSuperAdmin(props) {\r\n\r\n    const saveProductBillGenerateYearly = useStoreActions(state => state.bill.saveProductBillGenerateYearly)\r\n    const fetchclientUnit = useStoreActions(state => state.bill.fetchclientUnit)\r\n    const clientUnit = useStoreState(state => state.bill.clientUnit);\r\n    const [billgenerateForm] = Form.useForm();\r\n\r\n    const orderFormSubmit = (value) => {\r\n        //console.log(value)\r\n        let postYearly = {\r\n            clientUnit: clientUnit,\r\n            clientId: value?.client?.clientId,\r\n            months: value?.month,\r\n            year: value?.year,\r\n            productRate: num,\r\n        }\r\n        console.log(postYearly);\r\n\r\n        saveProductBillGenerateYearly(postYearly);\r\n\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        setPageTitle()\r\n    }, []);\r\n\r\n    const setPageTitle = () => {\r\n        var pageTitleEle = document.getElementById('pageTitle');\r\n        var pageTitle = 'Bill Generate Yearly'\r\n        return pageTitleEle ?  pageTitleEle.innerHTML = pageTitle : ''      \r\n    }\r\n\r\n    const [productId, setProductId] = useState<any>(null);\r\n    const [clientVal, setClientVal] = useState<any>(null);\r\n\r\n    const [monthLength, setmonthLength] = useState<any>(0)\r\n    const [num, setNum] = useState<any>(0)\r\n\r\n    const onchangesetNum = (val) => {\r\n        setNum(val)\r\n    }\r\n\r\n    const onchangemonthLength = (val) => {\r\n        setmonthLength(val.length)\r\n    }\r\n\r\n    const onchangeproductId = (val) => {\r\n        setProductId(val);\r\n        setClientVal(null)\r\n    }\r\n    const onchangeClient = (val) => {\r\n        setClientVal(val)\r\n        fetchclientUnit(val?.clientId);\r\n    }\r\n\r\n    let year = new Date().getFullYear();\r\n\r\n    const [total, settotal] = useState<any>(0);\r\n\r\n    useEffect(() => {\r\n        settotal(parseFloat(clientUnit) * monthLength * num)\r\n    }, [clientUnit, monthLength, num])\r\n    return (\r\n        <>\r\n            <Card title=\"Yearly Bill Generate Form\">\r\n            <Form\r\n                layout=\"horizontal\"\r\n                {...layout}\r\n                onFinish={orderFormSubmit}\r\n                id=\"basic-info\"\r\n                form={billgenerateForm}\r\n            >   \r\n                <div className=\"__orderForm p-0 custom-form\">\r\n                    <Row>\r\n                        <Col xs={24} sm={24} md={24} lg={8} xl={8}>\r\n                            <Form.Item\r\n                                name=\"product_id\"\r\n                                label=\"Product:\"\r\n                                className=\"title-Text\"\r\n                                rules={[\r\n                                    { required: true, message: \"Please select your product\" },\r\n                                ]}\r\n                            >\r\n                                <SelectProduct onChange={(val) => onchangeproductId(val)} selected={productId} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={24} sm={24} md={24} lg={8} xl={8}>\r\n                            <Form.Item\r\n                                name=\"client\"\r\n                                label=\"Client:\"\r\n                                className=\"title-Text\"\r\n                                rules={[\r\n                                    { required: true, message: \"Please select client\" },\r\n                                ]}\r\n                            >\r\n                                <SelectClient onChange={(val) => onchangeClient(val)} selected={clientVal} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={24} sm={24} md={24} lg={8} xl={8}>\r\n                            <Form.Item\r\n                                name=\"cunit\"\r\n                                label=\"Clinet Unit:\"\r\n                                className=\"title-Text custom-text-input\"\r\n\r\n                            >\r\n                                <span>{clientUnit}</span>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                    <Col xs={24} sm={24} md={24} lg={8} xl={8}>\r\n                            <Form.Item\r\n                                name=\"price\"\r\n                                label=\"Product Price:\"\r\n                                className=\"title-Text\"\r\n\r\n                            >\r\n                                <div className=\"price-wrapper\"> <InputNumber min={0} placeholder=\"Insert price\" onChange={(val) => onchangesetNum(val)} /><div className=\"price-title\">TK</div></div>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={24} sm={24} md={24} lg={8} xl={8}>\r\n                            <Form.Item\r\n                                name=\"year\"\r\n                                label=\"Year:\"\r\n                                className=\"title-Text\"\r\n                                initialValue={year}\r\n                                rules={[\r\n                                    { required: true, message: \"Please select year\" },\r\n                                ]}\r\n                            >\r\n                                <Select placeholder=\"Select Year\" allowClear>\r\n                                    <Option value={year - 1}>{year - 1}</Option>\r\n                                    <Option value={year}>{year}</Option>\r\n                                    <Option value={year + 1}>{year + 1}</Option>\r\n                                </Select>\r\n\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={24} sm={24} md={24} lg={8} xl={8}>\r\n                            <Form.Item\r\n                                name=\"month\"\r\n                                label=\"Month:\"\r\n                                className=\"title-Text\"\r\n                                rules={[\r\n                                    { required: true, message: \"Please select month\" },\r\n                                ]}\r\n                            >\r\n                                <Select placeholder=\"Select Month\" mode=\"multiple\" allowClear onChange={(val) => onchangemonthLength(val)}>\r\n                                    <Option value=\"January\">January</Option>\r\n                                    <Option value=\"February\">February</Option>\r\n                                    <Option value=\"March\">March</Option>\r\n                                    <Option value=\"April\">April</Option>\r\n                                    <Option value=\"May\">May</Option>\r\n                                    <Option value=\"June\">June</Option>\r\n                                    <Option value=\"July\">July</Option>\r\n                                    <Option value=\"August\">August</Option>\r\n                                    <Option value=\"September\">September</Option>\r\n                                    <Option value=\"October\">October</Option>\r\n                                    <Option value=\"November\">November</Option>\r\n                                    <Option value=\"December\">December</Option>\r\n                                </Select>\r\n\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={24} sm={24} md={24} lg={8} xl={8}>\r\n                            <Form.Item\r\n                                name=\"total\"\r\n                                label=\"Total Value:\"\r\n                                className=\"title-Text custom-text-input\"\r\n\r\n                            >\r\n                                <span>{total} Taka</span>\r\n                            </Form.Item>\r\n                        </Col> \r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={24} sm={24} md={24} lg={8} xl={8}>\r\n                            <Space size=\"small\" style={{ float: \"right\"}}>\r\n                                <Button type=\"primary\" htmlType=\"submit\" >\r\n                                    Generate\r\n                                </Button>\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </div>   \r\n            </Form>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n","import { DeleteOutlined, ShopOutlined, TeamOutlined } from '@ant-design/icons'\r\nimport { Button, Card, Col, DatePicker, Form, Input, Modal, Popconfirm, Row, Select, Space, Table, Tooltip } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useStoreActions, useStoreState } from '../../../store/hooks/easyPeasy'\r\nimport moment from \"moment\";\r\nconst { TextArea } = Input;\r\nexport default function OrderListSuperAdmin(props) {\r\n\r\n    const disbursementPayableList = useStoreState(state => state.bill.disbursementPayableList);\r\n\r\n    const fetchdisbursementPayableList = useStoreActions(state => state.bill.fetchdisbursementPayableList);\r\n    const saveDisbursement = useStoreActions(state => state.bill.saveDisbursement);\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const [modalVal, setmodalVal] = useState<any>()\r\n\r\n    const [billDisbursForm] = Form.useForm();\r\n\r\n    const showModal = (val) => {\r\n        console.log(val)\r\n        billDisbursForm.setFieldsValue({\r\n            partnerId: val?.partnetId,\r\n            partnerName: val?.partnerName,\r\n            billId: val?.distributionIds,\r\n            payableAmount: val?.payableAmount,\r\n        });\r\n        setIsModalVisible(true);\r\n\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        fetchdisbursementPayableList();\r\n        setPageTitle();\r\n    }, [])\r\n\r\n    const setPageTitle = () => {\r\n        var pageTitleEle = document.getElementById('pageTitle');\r\n        var pageTitle = 'Bill Disbursment'\r\n        return pageTitleEle ? pageTitleEle.innerHTML = pageTitle : ''\r\n    }\r\n\r\n\r\n    const disbursFormSubmit = (value) => {\r\n        let postData= {\r\n            \"billPaymentDistributionIds\": modalVal?.distributionIdList,\r\n            \"disbursementDate\": moment(value?.date).format(\"YYYY-MM-DD\"),\r\n            \"note\": value?.note==undefined?\"\":value?.note,\r\n            \"partnerId\": value?.partnerId,\r\n            \"totalDisbursementAmount\": value?.payableAmount,\r\n            \"transactionId\": value?.trnxId\r\n          }\r\n          console.log(postData)\r\n          saveDisbursement(postData);\r\n          \r\n          setTimeout(() => {\r\n            fetchdisbursementPayableList();\r\n          }, 300);\r\n\r\n          setTimeout(() => {\r\n            setIsModalVisible(false);\r\n          }, 1000);\r\n          \r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Partner Id',\r\n            dataIndex: 'partnetId',\r\n            key: 'partnetId',\r\n        },\r\n        {\r\n            title: 'Partner Name',\r\n            dataIndex: 'partnerName',\r\n            key: 'partnerName',\r\n        },\r\n        {\r\n            title: 'Bill Ids',\r\n            dataIndex: 'distributionIds',\r\n            key: 'distributionIds',\r\n        },\r\n        {\r\n            title: 'Disbursment Amount',\r\n            dataIndex: 'payableAmount',\r\n            key: 'payableAmount',\r\n        },\r\n\r\n        {\r\n            title: 'Action',\r\n            render: (text: any, record: any, index) => (\r\n                <Space size=\"middle\">\r\n                    <Tooltip title=\"Pre-Approve Order\">\r\n                        <Button type=\"primary\" icon={<ShopOutlined />} onClick={() => { showModal(record); setmodalVal(record) }}>Pay</Button>\r\n                    </Tooltip>\r\n                </Space>\r\n            ),\r\n        },\r\n\r\n    ]\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card title=\"Bill Disbursment\" >\r\n                <Table bordered={true} dataSource={disbursementPayableList} columns={columns} />\r\n            </Card>\r\n\r\n            <Modal\r\n                title=\"\" visible={isModalVisible}\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n                cancelButtonProps={{ style: { display: 'none' } }}\r\n                okButtonProps={{ style: { display: 'none' } }}\r\n                centered\r\n            >\r\n                <Form\r\n                    layout=\"vertical\"\r\n                    onFinish={disbursFormSubmit}\r\n                    id=\"basic-info\"\r\n                    form={billDisbursForm}\r\n                >\r\n                    <Row gutter={8}>\r\n                        <Col xs={24} sm={24} md={24} lg={11} xl={11}>\r\n                            <Form.Item\r\n                                name=\"partnerId\"\r\n                                label=\"Partner Id\"\r\n                                className=\"title-Text\"\r\n\r\n                            >\r\n                                <Input style={{ width: '100%' }} disabled />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col xs={24} sm={24} md={24} lg={1} xl={1}></Col>\r\n\r\n                        <Col xs={24} sm={24} md={24} lg={11} xl={11}>\r\n                            <Form.Item\r\n                                name=\"partnerName\"\r\n                                label=\"Partner Name:\"\r\n                                className=\"title-Text\"\r\n                            >\r\n                                <Input style={{ width: '100%' }} disabled />\r\n                            </Form.Item>\r\n                        </Col>\r\n\r\n                        <Col xs={24} sm={24} md={24} lg={11} xl={11}>\r\n                            <Form.Item\r\n                                name=\"billId\"\r\n                                label=\"Bill Id:\"\r\n                                className=\"title-Text\"\r\n                            >\r\n                                <Input style={{ width: '100%' }} disabled />\r\n\r\n\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col xs={24} sm={24} md={24} lg={1} xl={1}></Col>\r\n\r\n                        <Col xs={24} sm={24} md={24} lg={11} xl={11}>\r\n                            <Form.Item\r\n                                name=\"payableAmount\"\r\n                                label=\"Payable Amount:\"\r\n                                className=\"title-Text\"\r\n\r\n                            >\r\n                                <Input style={{ width: '100%' }} disabled />\r\n                            </Form.Item>\r\n\r\n                        </Col>\r\n\r\n                        <Col xs={24} sm={24} md={24} lg={11} xl={11}>\r\n                            <Form.Item\r\n                                name=\"date\"\r\n                                label=\"Date:\"\r\n                                className=\"title-Text\"\r\n                                rules={[\r\n                                    { required: true, message: \"Please enter date\" },\r\n                                ]}\r\n                            >\r\n\r\n                                <DatePicker style={{ width: '100%' }} placeholder=\"Select Date\"/>\r\n\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col xs={24} sm={24} md={24} lg={1} xl={1}></Col>\r\n\r\n                        <Col xs={24} sm={24} md={24} lg={11} xl={11}>\r\n                            <Form.Item\r\n                                name=\"trnxId\"\r\n                                label=\"Trnx. Id:\"\r\n                                className=\"title-Text\"\r\n                                rules={[\r\n                                    { required: true, message: \"Please enter id\" },\r\n                                ]}\r\n                            >\r\n                                <Input style={{ width: '100%' }} placeholder=\"Enter Transaction Id\" />\r\n                            </Form.Item>\r\n\r\n                        </Col>\r\n\r\n                        <Col xs={24} sm={24} md={24} lg={11} xl={11}>\r\n                            <Form.Item\r\n                                name=\"note\"\r\n                                label=\"Note:\"\r\n                                className=\"title-Text\"\r\n\r\n                            >\r\n                                <TextArea style={{ width: '100%' }} placeholder=\"Enter Note\" />\r\n                            </Form.Item>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <Space size=\"small\" style={{ float: \"right\" }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\" >\r\n                            Submit\r\n                                </Button>\r\n                    </Space>\r\n                    <br />\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n","import * as React from 'react';\nimport { Input, Space, Button } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\n\nconst GetColumnSearchProps = (dataIndex, placeHolder) => {\n\n\n  const [searchText, setsearchText] = React.useState('');\n  const [searchedColumn, setsearchedColumn] = React.useState('');\n \n  const searchInput = React.useRef(null);\n\n  const handleSearch = (selectedKeys: React.SetStateAction<string>[], confirm: () => void, dataIndex: React.SetStateAction<string>) => {\n    confirm();\n    setsearchText(selectedKeys[0]);\n    setsearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters: () => void) => {\n    clearFilters();\n    setsearchText('');\n  };\n\n  return {\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={searchInput}\n          placeholder={`Search ${placeHolder}`}\n          value={selectedKeys[0]}\n          onChange={e =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Clear\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: filtered => (\n      <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n    render: text =>\n    \n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[searchText]}\n          autoEscape\n          textToHighlight={text.toString()}\n        />\n      \n  };\n};\n\nexport default GetColumnSearchProps;\n","import { DeleteOutlined, ShopOutlined, TeamOutlined } from '@ant-design/icons'\r\nimport { Button, Card, Col, DatePicker, Form, Input, Modal, Popconfirm, Row, Select, Space, Table, Tooltip } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useStoreActions, useStoreState } from '../../../store/hooks/easyPeasy'\r\nimport { SelectProduct } from '../../select/SelectProduct'\r\nimport GetColumnSearchProps from '../../utils/getColumnSearchProps';\r\n\r\nexport default function BillPaymentReport(props) {\r\n\r\n    const searchApipClientBillPaidUnpaidList = useStoreState(state => state.bill.searchApipClientBillPaidUnpaidList);\r\n\r\n    const fetchsearchApipClientBillPaidUnpaidList = useStoreActions(state => state.bill.fetchsearchApipClientBillPaidUnpaidList);\r\n\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const onFinish = (values: any) => {\r\n        let postData: any = {\r\n            year: values?.year,\r\n            productId: values?.product_id?.productId,\r\n        }\r\n        console.log(postData)\r\n        fetchsearchApipClientBillPaidUnpaidList(postData);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        setPageTitle();\r\n    }, [])\r\n\r\n    const setPageTitle = () => {\r\n        var pageTitleEle = document.getElementById('pageTitle');\r\n        var pageTitle = 'Report'\r\n        return pageTitleEle ? pageTitleEle.innerHTML = pageTitle : ''\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Products Id',\r\n            dataIndex: 'clientProvideId',\r\n            key: 'clientProvideId',\r\n            ...GetColumnSearchProps('clientProvideId', 'Products Id'),\r\n        },\r\n        {\r\n            title: 'Client/Product Name',\r\n            dataIndex: 'clientName',\r\n            key: 'clientName',\r\n            ...GetColumnSearchProps('clientName', 'Client/Product Name'),\r\n        },\r\n        {\r\n            title: 'Area/Address',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            ...GetColumnSearchProps('address', 'Area/Address'),\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'clientStatus',\r\n            key: 'clientStatus',\r\n            ...GetColumnSearchProps('clientStatus', 'Status'),\r\n        },\r\n        {\r\n            title: 'Bill Month',\r\n            dataIndex: 'billMonth',\r\n            key: 'billMonth',\r\n            ...GetColumnSearchProps('billMonth', 'Bill Month'),\r\n        },\r\n        {\r\n            title: 'Paid',\r\n            dataIndex: 'paidAmount',\r\n            key: 'paidAmount',\r\n            ...GetColumnSearchProps('paidAmount', 'Paid'),\r\n        },\r\n        {\r\n            title: 'Due/Unpaid',\r\n            dataIndex: 'dueAmount',\r\n            key: 'dueAmount',\r\n            ...GetColumnSearchProps('dueAmount', 'Due/Unpaid'),\r\n        },\r\n\r\n\r\n    ]\r\n\r\n    const currentyear = new Date().getFullYear();\r\n\r\n    // console.log(currentyear)\r\n\r\n    const optionsYear = [\r\n        { value: currentyear - 1, label: currentyear - 1 },\r\n        { value: currentyear, label: currentyear },\r\n        { value: currentyear + 1, label: currentyear + 1 }\r\n    ];\r\n    const [productId, setProductId] = useState<any>(null);\r\n\r\n    const onchangeproductId = (val) => {\r\n        setProductId(val);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" onFinish={onFinish} id='create-class' form={form} >\r\n                <Row gutter={15} className=\"box-shadow p-15\">\r\n                    <Col xs={24} sm={24} md={24} lg={5} xl={5}></Col>\r\n                    <Col xs={24} sm={24} md={24} lg={4} xl={4}>\r\n\r\n                        <Form.Item\r\n                            name=\"year\"\r\n                            label=\"Year:\"\r\n                            className=\"title-Text\"\r\n                            rules={[\r\n                                { required: true, message: \"Please Select Year\" },\r\n                            ]}\r\n                        >\r\n                            <Select allowClear placeholder=\"Select Year\" options={optionsYear} />\r\n\r\n\r\n                        </Form.Item>\r\n\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={24} lg={4} xl={4}>\r\n\r\n                        <Form.Item\r\n                            name=\"product_id\"\r\n                            label=\"Product:\"\r\n                            className=\"title-Text\"\r\n                            rules={[\r\n                                { required: true, message: \"Please select your product\" },\r\n                            ]}\r\n                        >\r\n                            <SelectProduct onChange={(val) => onchangeproductId(val)} selected={productId}\r\n\r\n                            />\r\n                        </Form.Item>\r\n\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={24} lg={4} xl={4}>\r\n\r\n                        <Space size=\"small\" style={{ marginTop: 30 }} >\r\n                            <Button type=\"primary\" htmlType=\"submit\" >\r\n                                Search\r\n                                    </Button>\r\n                        </Space>\r\n\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={24} lg={5} xl={5}></Col>\r\n                </Row>\r\n            </Form>\r\n            {searchApipClientBillPaidUnpaidList.length > 0 &&\r\n                <Card title=\"Product wise Paid/Due List\" >\r\n\r\n                    <Table bordered={true} dataSource={searchApipClientBillPaidUnpaidList} columns={columns} />\r\n\r\n                </Card>\r\n\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { DeleteOutlined, ShopOutlined, TeamOutlined } from '@ant-design/icons'\r\nimport { Button, Card, Col, DatePicker, Form, Input, Modal, Popconfirm, Row, Select, Space, Table, Tooltip } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useStoreActions, useStoreState } from '../../../store/hooks/easyPeasy'\r\nimport { SelectProduct } from '../../select/SelectProduct'\r\nimport GetColumnSearchProps from '../../utils/getColumnSearchProps';\r\n\r\nexport default function BillPaymentReport(props) {\r\n\r\n    const searchPipClientBillPaidUnpaidList = useStoreState(state => state.bill.searchPipClientBillPaidUnpaidList);\r\n    const fetchsearchPipClientBillPaidUnpaidList = useStoreActions(state => state.bill.fetchsearchPipClientBillPaidUnpaidList);\r\n\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const onFinish = (values: any) => {\r\n        let postData: any = {\r\n            year: values?.year,\r\n            productId: values?.product_id?.productId,\r\n        }\r\n      //  console.log(postData)\r\n        fetchsearchPipClientBillPaidUnpaidList(postData);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        setPageTitle();\r\n    }, [])\r\n\r\n    const setPageTitle = () => {\r\n        var pageTitleEle = document.getElementById('pageTitle');\r\n        var pageTitle = 'Report'\r\n        return pageTitleEle ? pageTitleEle.innerHTML = pageTitle : ''\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'APIP Name',\r\n            dataIndex: 'apipName',\r\n            key: 'apipName',\r\n            ...GetColumnSearchProps('apipName', 'APIP Name'),\r\n        },        \r\n        {\r\n            title: 'Mobile No.',\r\n            dataIndex: 'personalNumber',\r\n            key: 'personalNumber',\r\n            ...GetColumnSearchProps('personalNumber', 'Mobile No.'),\r\n        },\r\n        {\r\n            title: 'Client/Product Name',\r\n            dataIndex: 'clientName',\r\n            key: 'clientName',\r\n            ...GetColumnSearchProps('clientName', 'Client/Product Name'),\r\n        },\r\n        {\r\n            title: 'Area/Address',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            ...GetColumnSearchProps('address', 'Area/Address'),\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'clientStatus',\r\n            key: 'clientStatus',\r\n            ...GetColumnSearchProps('clientStatus', 'Status'),\r\n        },\r\n        {\r\n            title: 'Bill Month',\r\n            dataIndex: 'billMonth',\r\n            key: 'billMonth',\r\n            ...GetColumnSearchProps('billMonth', 'Bill Month'),\r\n        },\r\n        {\r\n            title: 'Paid',\r\n            dataIndex: 'paidAmount',\r\n            key: 'paidAmount',\r\n            ...GetColumnSearchProps('paidAmount', 'Paid'),\r\n        },\r\n        {\r\n            title: 'Due/Unpaid',\r\n            dataIndex: 'dueAmount',\r\n            key: 'dueAmount',\r\n            ...GetColumnSearchProps('dueAmount', 'Due/Unpaid'),\r\n        },\r\n\r\n\r\n    ]\r\n\r\n    const currentyear = new Date().getFullYear();\r\n\r\n    // console.log(currentyear)\r\n\r\n    const optionsYear = [\r\n        { value: currentyear - 1, label: currentyear - 1 },\r\n        { value: currentyear, label: currentyear },\r\n        { value: currentyear + 1, label: currentyear + 1 }\r\n    ];\r\n    const [productId, setProductId] = useState<any>(null);\r\n\r\n    const onchangeproductId = (val) => {\r\n        setProductId(val);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" onFinish={onFinish} id='create-class' form={form} >\r\n                <Row gutter={15} className=\"box-shadow p-15\">\r\n                    <Col xs={24} sm={24} md={24} lg={5} xl={5}></Col>\r\n                    <Col xs={24} sm={24} md={24} lg={4} xl={4}>\r\n\r\n                        <Form.Item\r\n                            name=\"year\"\r\n                            label=\"Year:\"\r\n                            className=\"title-Text\"\r\n                            rules={[\r\n                                { required: true, message: \"Please Select Year\" },\r\n                            ]}\r\n                        >\r\n                            <Select allowClear placeholder=\"Select Year\" options={optionsYear} />\r\n\r\n\r\n                        </Form.Item>\r\n\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={24} lg={4} xl={4}>\r\n\r\n                        <Form.Item\r\n                            name=\"product_id\"\r\n                            label=\"Product:\"\r\n                            className=\"title-Text\"\r\n                            rules={[\r\n                                { required: true, message: \"Please select your product\" },\r\n                            ]}\r\n                        >\r\n                            <SelectProduct onChange={(val) => onchangeproductId(val)} selected={productId}\r\n\r\n                            />\r\n                        </Form.Item>\r\n\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={24} lg={4} xl={4}>\r\n\r\n                        <Space size=\"small\" style={{ marginTop: 30 }} >\r\n                            <Button type=\"primary\" htmlType=\"submit\" >\r\n                                Search\r\n                                    </Button>\r\n                        </Space>\r\n\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={24} lg={5} xl={5}></Col>\r\n                </Row>\r\n            </Form>\r\n            {searchPipClientBillPaidUnpaidList.length > 0 &&\r\n                <Card title=\"Product wise Paid/Due List\" >\r\n\r\n                    <Table bordered={true} dataSource={searchPipClientBillPaidUnpaidList} columns={columns} />\r\n\r\n                </Card>\r\n\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { DeleteOutlined, EyeOutlined, ShopOutlined, TeamOutlined } from '@ant-design/icons'\r\nimport { Button, Card, Col, DatePicker, Form, Input, Modal, Popconfirm, Row, Select, Space, Table, Tooltip } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useStoreActions, useStoreState } from '../../../store/hooks/easyPeasy'\r\nimport { SelectProduct } from '../../select/SelectProduct'\r\nimport GetColumnSearchProps from '../../utils/getColumnSearchProps';\r\n\r\nexport default function BillPaymentReport(props) {\r\n\r\n    const searchSdlClientBillPaidUnpaidList = useStoreState(state => state.bill.searchSdlClientBillPaidUnpaidList);\r\n    const fetchsearchSdlClientBillPaidUnpaidList = useStoreActions(state => state.bill.fetchsearchSdlClientBillPaidUnpaidList);\r\n    const searchApipClientBillPaidUnpaidListSDL = useStoreState(state => state.bill.searchApipClientBillPaidUnpaidListSDL);\r\n    const fetchsearchApipClientBillPaidUnpaidListSDL = useStoreActions(state => state.bill.fetchsearchApipClientBillPaidUnpaidListSDL);\r\n\r\n    const fdata = [];\r\n    const [hasData, sethasData] = useState<boolean>(false)\r\n\r\n    const [form] = Form.useForm();\r\n    const [apipD, setapipD] = useState<any>();\r\n    const [apipName, setapipName] = useState<any>();\r\n    const onFinish = (values: any) => {\r\n        sethasData(true)\r\n        let postData: any = {\r\n            year: values?.year,\r\n            productId: values?.product_id?.productId,\r\n\r\n        };\r\n        setapipD(postData);\r\n        // localStorage.setItem('year', values?.year);\r\n        // localStorage.setItem('productId', values?.product_id?.productId);\r\n        //  console.log(postData)\r\n        fetchsearchSdlClientBillPaidUnpaidList(postData);\r\n    };\r\n\r\n    const apipDetails = (values: any) => {\r\n        setapipName(values?.apipName)\r\n        apipD.apipId = values?.apipId;\r\n        // let fetchData ={\r\n        //     year: localStorage.getItem('year'),\r\n        //     productId: localStorage.getItem('productId'),\r\n        //     apipId:values?.apipId\r\n        // };\r\n        // console.log(fetchData);\r\n        fetchsearchApipClientBillPaidUnpaidListSDL(apipD);\r\n\r\n        setTimeout(() => {\r\n            setIsModalVisible(true);\r\n        }, 200);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        setPageTitle();\r\n    }, [])\r\n\r\n    const setPageTitle = () => {\r\n        var pageTitleEle = document.getElementById('pageTitle');\r\n        var pageTitle = 'Report'\r\n        return pageTitleEle ? pageTitleEle.innerHTML = pageTitle : ''\r\n    }\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'PIP Name',\r\n            dataIndex: 'pipName',\r\n            key: 'pipName',\r\n            ...GetColumnSearchProps('pipName', 'PIP Name'),\r\n        },\r\n        {\r\n            title: 'APIP Name',\r\n            dataIndex: 'apipName',\r\n            key: 'apipName',\r\n            ...GetColumnSearchProps('apipName', 'APIP Name'),\r\n        },\r\n        {\r\n            title: 'APIP Mobile No.',\r\n            dataIndex: 'apipMobileNo',\r\n            key: 'apipMobileNo',\r\n            ...GetColumnSearchProps('apipMobileNo', 'APIP Mobile no.'),\r\n        },\r\n        {\r\n            title: 'Area/Address',\r\n            dataIndex: 'area',\r\n            key: 'area',\r\n            ...GetColumnSearchProps('area', 'Area/Address'),\r\n        },\r\n        {\r\n            title: 'Paid',\r\n            dataIndex: 'paidAmount',\r\n            key: 'paidAmount',\r\n            ...GetColumnSearchProps('paidAmount', 'Paid'),\r\n        },\r\n        {\r\n            title: 'Due',\r\n            dataIndex: 'due',\r\n            key: 'due',\r\n            ...GetColumnSearchProps('due', 'Due'),\r\n        },\r\n        {\r\n            title: 'Action',\r\n            render: (text: any, record: any, index) => (\r\n                <Space size=\"middle\">\r\n                    <Tooltip title=\"APIP Bill\">\r\n                        <Button type=\"primary\" icon={<EyeOutlined />} onClick={() => { apipDetails(record) }} >View</Button>\r\n                    </Tooltip>\r\n                </Space>\r\n            ),\r\n        },\r\n\r\n    ]\r\n\r\n    const columnsAPIP = [\r\n        {\r\n            title: 'Product Id',\r\n            dataIndex: 'clientProvideId',\r\n            key: 'clientProvideId',\r\n            ...GetColumnSearchProps('clientProvideId', 'Product Id'),\r\n        },\r\n        {\r\n            title: 'Client/Product Name',\r\n            dataIndex: 'clientName',\r\n            key: 'clientName',\r\n            ...GetColumnSearchProps('clientName', 'Client/Product Name'),\r\n        },\r\n        {\r\n            title: 'Area/Address',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            ...GetColumnSearchProps('address', 'Area/Address'),\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'clientStatus',\r\n            key: 'clientStatus',\r\n            ...GetColumnSearchProps('clientStatus', 'Status'),\r\n        },\r\n        {\r\n            title: 'Bill Month',\r\n            dataIndex: 'billMonth',\r\n            key: 'billMonth',\r\n            ...GetColumnSearchProps('billMonth', 'Bill Month'),\r\n        },\r\n        {\r\n            title: 'Paid',\r\n            dataIndex: 'paidAmount',\r\n            key: 'paidAmount',\r\n            ...GetColumnSearchProps('paidAmount', 'Paid'),\r\n        },\r\n        {\r\n            title: 'Due/Unpaid',\r\n            dataIndex: 'dueAmount',\r\n            key: 'dueAmount',\r\n            ...GetColumnSearchProps('dueAmount', 'Due/Unpaid'),\r\n        },\r\n\r\n\r\n    ]\r\n\r\n    const currentyear = new Date().getFullYear();\r\n\r\n    // console.log(currentyear)\r\n\r\n    const optionsYear = [\r\n        { value: currentyear - 1, label: currentyear - 1 },\r\n        { value: currentyear, label: currentyear },\r\n        { value: currentyear + 1, label: currentyear + 1 }\r\n    ];\r\n    const [productId, setProductId] = useState<any>(null);\r\n\r\n    const onchangeproductId = (val) => {\r\n        setProductId(val);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" onFinish={onFinish} id='create-class' form={form} >\r\n                <Row gutter={15} className=\"box-shadow p-15\">\r\n                    <Col xs={24} sm={24} md={24} lg={5} xl={5}></Col>\r\n                    <Col xs={24} sm={24} md={24} lg={4} xl={4}>\r\n\r\n                        <Form.Item\r\n                            name=\"year\"\r\n                            label=\"Year:\"\r\n                            className=\"title-Text\"\r\n                            rules={[\r\n                                { required: true, message: \"Please Select Year\" },\r\n                            ]}\r\n                        >\r\n                            <Select allowClear placeholder=\"Select Year\" options={optionsYear} />\r\n\r\n\r\n                        </Form.Item>\r\n\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={24} lg={4} xl={4}>\r\n\r\n                        <Form.Item\r\n                            name=\"product_id\"\r\n                            label=\"Product:\"\r\n                            className=\"title-Text\"\r\n                            rules={[\r\n                                { required: true, message: \"Please select your product\" },\r\n                            ]}\r\n                        >\r\n                            <SelectProduct onChange={(val) => onchangeproductId(val)} selected={productId}\r\n\r\n                            />\r\n                        </Form.Item>\r\n\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={24} lg={4} xl={4}>\r\n\r\n                        <Space size=\"small\" style={{ marginTop: 30 }} >\r\n                            <Button type=\"primary\" htmlType=\"submit\" >\r\n                                Search\r\n                                    </Button>\r\n                        </Space>\r\n\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={24} lg={5} xl={5}></Col>\r\n                </Row>\r\n            </Form>\r\n            {searchSdlClientBillPaidUnpaidList.length > 0 && hasData &&\r\n                <Card title=\"Product wise Paid/Due List\" >\r\n                        <Table bordered={true} dataSource={searchSdlClientBillPaidUnpaidList} columns={columns} />\r\n                </Card>\r\n\r\n            }\r\n            <Modal title={\"AIP Bill Payment of \" + apipName}\r\n                visible={isModalVisible}\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n                centered\r\n                okButtonProps={{ style: { display: 'none' } }}\r\n                cancelText=\"Close\"\r\n                width=\"60%\"\r\n            >\r\n                <Table bordered={true} dataSource={searchApipClientBillPaidUnpaidListSDL} columns={columnsAPIP} />\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n","import { DeleteOutlined, ShopOutlined, TeamOutlined } from '@ant-design/icons'\r\nimport { Button, Card, Col, DatePicker, Form, Input, Modal, Popconfirm, Row, Select, Space, Table, Tooltip } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useStoreActions, useStoreState } from '../../../store/hooks/easyPeasy'\r\nimport GetColumnSearchProps from '../../utils/getColumnSearchProps';\r\nexport default function BillPaymentReport(props) {\r\n\r\n    const searchProductWiseMonthlyPaidUnpaidList = useStoreState(state => state.bill.searchProductWiseMonthlyPaidUnpaidList);\r\n    const fetchsearchProductWiseMonthlyPaidUnpaidList = useStoreActions(state => state.bill.fetchsearchProductWiseMonthlyPaidUnpaidList);\r\n\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const onFinish = (values: any) => {\r\n        let postData: any = {\r\n            year: values?.year,\r\n            month: values?.month,\r\n        }\r\n        fetchsearchProductWiseMonthlyPaidUnpaidList(postData);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        setPageTitle();\r\n    }, [])\r\n\r\n    const setPageTitle = () => {\r\n        var pageTitleEle = document.getElementById('pageTitle');\r\n        var pageTitle = 'Report'\r\n        return pageTitleEle ? pageTitleEle.innerHTML = pageTitle : ''\r\n    }\r\n\r\n    const columns = [\r\n\r\n        {\r\n            title: 'Product Name',\r\n            dataIndex: 'productName',\r\n            key: 'productName',\r\n            ...GetColumnSearchProps('productName', 'Product Name'),\r\n        },\r\n        {\r\n            title: 'Generated Amount',\r\n            dataIndex: 'generatedBillAmount',\r\n            key: 'generatedBillAmount',\r\n            ...GetColumnSearchProps('generatedBillAmount', 'Generated Amount'),\r\n        },\r\n        {\r\n            title: 'Total Paid',\r\n            dataIndex: 'paidAmount',\r\n            key: 'paidAmount',\r\n            ...GetColumnSearchProps('paidAmount', 'Total Paid'),\r\n        },\r\n        {\r\n            title: 'Total Due',\r\n            dataIndex: 'due',\r\n            key: 'due',\r\n            ...GetColumnSearchProps('due', 'Total Due'),\r\n        }\r\n\r\n    ]\r\n\r\n    const currentyear = new Date().getFullYear();\r\n\r\n    // console.log(currentyear)\r\n\r\n    const optionsYear = [\r\n        { value: currentyear - 1, label: currentyear - 1 },\r\n        { value: currentyear, label: currentyear },\r\n        { value: currentyear + 1, label: currentyear + 1 }\r\n    ];\r\n\r\n    const optionsMonth = [\r\n        { value: \"January\", label: \"January\" },\r\n        { value: \"February\", label: \"February\" },\r\n        { value: \"March\", label: \"March\" },\r\n        { value: \"April\", label: \"April\" },\r\n        { value: \"May\", label: \"May\" },\r\n        { value: \"June\", label: \"June\" },\r\n        { value: \"July\", label: \"July\" },\r\n        { value: \"August\", label: \"August\" },\r\n        { value: \"September\", label: \"September\" },\r\n        { value: \"October\", label: \"October\" },\r\n        { value: \"November\", label: \"November\" },\r\n        { value: \"December\", label: \"December\" }\r\n\r\n    ]\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\" onFinish={onFinish} id='create-class' form={form} >\r\n                <Row gutter={15} className=\"box-shadow p-15\">\r\n                    <Col xs={24} sm={24} md={24} lg={5} xl={5}></Col>\r\n                    <Col xs={24} sm={24} md={24} lg={4} xl={4}>\r\n\r\n                        <Form.Item\r\n                            name=\"year\"\r\n                            label=\"Year:\"\r\n                            className=\"title-Text\"\r\n                            rules={[\r\n                                { required: true, message: \"Please Select Year\" },\r\n                            ]}\r\n                        >\r\n                            <Select allowClear placeholder=\"Select Year\" options={optionsYear} />\r\n\r\n\r\n                        </Form.Item>\r\n\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={24} lg={4} xl={4}>\r\n\r\n                        <Form.Item\r\n                            name=\"month\"\r\n                            label=\"Product:\"\r\n                            className=\"title-Text\"\r\n                            rules={[\r\n                                { required: true, message: \"Please select your product\" },\r\n                            ]}\r\n                        >\r\n                            <Select allowClear placeholder=\"Select Month\" options={optionsMonth} />\r\n                        </Form.Item>\r\n\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={24} lg={4} xl={4}>\r\n\r\n                        <Space size=\"small\" style={{ marginTop: 30 }} >\r\n                            <Button type=\"primary\" htmlType=\"submit\" >\r\n                                Search\r\n                                    </Button>\r\n                        </Space>\r\n\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={24} lg={5} xl={5}></Col>\r\n                </Row>\r\n            </Form>\r\n            {searchProductWiseMonthlyPaidUnpaidList.length > 0 &&\r\n                <Card title=\"Month wise Paid/Due List\" >\r\n\r\n                    <Table bordered={true} dataSource={searchProductWiseMonthlyPaidUnpaidList} columns={columns} />\r\n\r\n                </Card>\r\n\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { Layout, Menu, Breadcrumb } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { useStoreState } from './store/hooks/easyPeasy';\r\nimport TopNavBar from './topNavbar'\r\nimport { Sidebar } from './layouts/sidebar/Sidebar';\r\n\r\nimport Dashboard from './container/pages/dashboard/Dashboard.page';\r\nimport Pendinglist from './container/pages/partner/PendingListSuperAdmin.page';\r\nimport OrderListSuperAdmin from './container/pages/partner/OrderListSuperAdmin.page';\r\nimport PreApproveOrderListSuperAdmin from './container/pages/partner/PreApproveOrderListSuperAdmin.page';\r\nimport OrderFormPartner from './container/pages/partner/OrderFormPartner.page';\r\nimport BillGenerateMonthlySuperAdmin from './container/pages/partner/BillGenerateMonthlySuperAdmin.page';\r\nimport BillGenerateYearlySuperAdmin from './container/pages/partner/BillGenerateYearlySuperAdmin.page';\r\nimport BillDisbursSuperAdmin from './container/pages/partner/BillDisbursSuperAdmin.page';\r\nimport BillPaymentAPIPReport from './container/pages/partner/BillPaymentAPIPReport.page';\r\nimport BillPaymentPIPReport from './container/pages/partner/BillPaymentPIPReport.page';\r\nimport BillPaymentSDLReport from './container/pages/partner/BillPaymentSDLReport.page';\r\nimport BillPaymentSDLMonthlyReport from './container/pages/partner/BillPaymentSDLMonthlyReport.page';\r\n\r\nconst { Header, Content, Sider } = Layout;\r\n// Application\r\nexport default function Container() {\r\n\tconst user = useStoreState(state => state.auth.user)\r\n\tconst [collapsed, setCollapsed] = useState(false);\r\n\tconst toggle = () => setCollapsed(!collapsed);\r\n\r\n\tconst onCollapse = collapsed => {\r\n\t\t//console.log(\"hello\")\r\n\t\t//console.log(collapsed);\r\n\t\tsetCollapsed(collapsed)\r\n\t};\r\n\treturn (\r\n\t\t<Layout style={{ minHeight: '100vh' }}>\r\n\t\t\t<Sider className=\"side-menu-wrapper\" collapsible collapsed={collapsed} onCollapse={onCollapse} breakpoint=\"lg\" onBreakpoint={(broken) => {\r\n\t\t\t\t//console.log(broken);\r\n\t\t\t}} >\r\n\t\t\t\t<div className=\"logo\">Sheba Suite</div>\r\n\t\t\t\t{user && <Sidebar />}\r\n\t\t\t</Sider>\r\n\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t<Header className=\"site-layout-background\">\r\n\t\t\t\t\t<TopNavBar />\r\n\t\t\t\t</Header>\r\n\t\t\t\t<Content className=\"p-15\">\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route exact path=\"/\" component={Dashboard} />\r\n\t\t\t\t\t\t<Route exact path=\"/pending\" component={Pendinglist} />\r\n\t\t\t\t\t\t<Route exact path=\"/order-form\" component={OrderFormPartner} />\r\n\t\t\t\t\t\t<Route exact path=\"/order-list\" component={OrderListSuperAdmin} />\r\n\t\t\t\t\t\t<Route exact path=\"/preorder-list\" component={PreApproveOrderListSuperAdmin} />\r\n\t\t\t\t\t\t<Route exact path=\"/bill-generate-monthly\" component={BillGenerateMonthlySuperAdmin} />\r\n\t\t\t\t\t\t<Route exact path=\"/bill-generate-yearly\" component={BillGenerateYearlySuperAdmin} />\r\n\t\t\t\t\t\t<Route exact path=\"/bill-disbursment\" component={BillDisbursSuperAdmin} />\r\n\t\t\t\t\t\t<Route exact path=\"/bill-payment-apip\" component={BillPaymentAPIPReport} />\r\n\t\t\t\t\t\t<Route exact path=\"/bill-payment-pip\" component={BillPaymentPIPReport} />\r\n\t\t\t\t\t\t<Route exact path=\"/bill-payment-sdl\" component={BillPaymentSDLReport} />\r\n\t\t\t\t\t\t<Route exact path=\"/bill-payment-sdl-monthly\" component={BillPaymentSDLMonthlyReport} />\r\n\t\t\t\t\t\t{/* <Route exact path=\"/payment\" component={Payment} /> */}\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</Content>\r\n\t\t\t</Layout>\r\n\t\t</Layout>\r\n\t);\r\n}\r\n","export default __webpack_public_path__ + \"static/media/sp_logo.09529424.png\";","import { Alert, Form, Input, Button, Checkbox, Layout, Row, Col, Tooltip, Spin } from 'antd';\r\nimport React from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { InfoCircleOutlined, UserOutlined, LoadingOutlined, HomeOutlined, MailOutlined, PhoneOutlined } from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../../../../src/assets/images/sp_logo.png\"\r\nimport { useStoreActions, useStoreState } from '../../store/hooks/easyPeasy';\r\n// const FormItem = Form.Item;\r\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n\r\n// interface IProps {\r\n//     logInConnect: (cred: any) => void;\r\n//     authFailed: boolean;\r\n//     authFailedMessage: string | undefined;\r\n// }\r\n\r\n// const layout = {\r\n//     labelCol: { span: 8 },\r\n//     wrapperCol: { span: 8 },\r\n// };\r\n\r\n// const tailLayout = {\r\n//     wrapperCol: { offset: 8, span: 16 },\r\n// };\r\n\r\n// const { Option } = Select;\r\n\r\n\r\n\r\n// function onFinish() {\r\n\r\n// }\r\n\r\nexport function Login() {\r\n    // const authFailed = false;\r\n    // const authFailedMessage = '';\r\n    const authenticate = useStoreActions(state => state.auth.authenticate);\r\n    const setBusy = useStoreActions(state => state.auth.setBusy);\r\n\r\n    const error = useStoreState(state => state.auth.error);\r\n    const isBusy = useStoreState(state => state.auth.busy);\r\n    const user = useStoreState(state => state.auth.user);\r\n    let rememberChoice: boolean = false;\r\n\r\n    if (user) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    const onRememberChange = (event) => {\r\n        rememberChoice = event.target.checked;\r\n    }\r\n\r\n    const handleSubmit = async (payload) => {\r\n        setBusy(true);\r\n        payload.remember = rememberChoice;\r\n        authenticate(payload);\r\n    };\r\n\r\n    const style = {\r\n        container: {\r\n            position: 'absolute' as 'absolute',\r\n            background: '#ecf0f1',\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        }\r\n    };\r\n\r\n    return (\r\n        // <Layout style={style.container} className=\"login-form-wrapper\">\r\n        <Layout className=\"login-form-wrapper\">\r\n            <div className=\"logo-wrapper\">\r\n                <img className=\"loginLogo\" src={logo} alt=\"login_logo\" />\r\n                <p className=\"page-title\">Sheba Suite</p>\r\n            </div>\r\n            <div className=\"login-form\">\r\n                <p className=\"page-sub-title\">Sign in </p>\r\n                <Form name=\"login\" onFinish={handleSubmit}>\r\n                    <Form.Item style={{ width: '330px' }} name='username' rules={[{ required: true, message: 'Please input your username or email!' }]}>\r\n                        <Input\r\n                            name=\"username\"\r\n                            style={{ width: '330px' }}\r\n                            placeholder=\"Your username\"\r\n                            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                            suffix={\r\n                                <Tooltip title=\"username\">\r\n                                    <InfoCircleOutlined style={{ color: 'rgba(0,0,0,.45)' }} />\r\n                                </Tooltip>\r\n                            }\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item style={{ width: '330px' }} name='password' rules={[{ required: true, message: 'Please input your password!' }]}>\r\n                        <Input.Password\r\n                            name=\"password\"\r\n                            style={{ width: '330px' }}\r\n                            placeholder=\"Password\"\r\n                            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                            suffix={\r\n                                <Tooltip title=\"password\">\r\n                                    <InfoCircleOutlined style={{ color: 'rgba(0,0,0,.45)' }} />\r\n                                </Tooltip>\r\n                            }\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Row justify=\"space-between\">\r\n                        <Col>\r\n                            <Checkbox onChange={onRememberChange}>Remember me</Checkbox>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button type=\"primary\" htmlType=\"submit\" disabled={isBusy}>\r\n                                {isBusy ? <Spin indicator={antIcon} /> : 'Login'}\r\n                            </Button>\r\n\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {\r\n                        error ? <Alert style={{ marginTop: '20px' }} message={error} type=\"error\" /> : null\r\n                    }\r\n                    <hr />\r\n                    <div className=\"loginIcons\">\r\n                        <HomeOutlined />  <span style={{ marginLeft: \"5px\" }}>Dhaka, Bangladesh</span> <br />\r\n                        <MailOutlined /><span style={{ marginLeft: \"5px\" }}> <a style={{ color: \"black\" }} href=\"mailto:example@example.com\">info@shebasuite.com</a> </span>\r\n                        <span style={{ float: \"right\" }}>  <PhoneOutlined style={{ marginLeft: \"5px\" }} /> <a style={{ color: \"black\" }} href=\"tel:+8809612191919\"> +880 9612-191919</a></span>\r\n                    </div>\r\n                    <div className=\"signUp\">\r\n                       Not a member, <Link to=\"/signup\">SIGN UP</Link>\r\n                    </div>\r\n                </Form>\r\n                {/* <div className=\"footer\">\r\n                    <span style={{ marginRight: \"8px\" }}> <a href='http://aws.okkhor.org'>My Dashboard</a> : Just a dashboard </span>\r\n                </div> */}\r\n            </div>\r\n        </Layout>\r\n    );\r\n}\r\n","import { Layout } from 'antd';\nimport { Route, Redirect } from \"react-router-dom\";\nimport * as React from \"react\";\nimport { useStoreState } from '../../store/hooks/easyPeasy';\n\ninterface IProps {\n\tcomponent: React.ComponentType<any>;\n\tpath: string;\n\texact?: boolean;\n}\n\nexport const Authenticated = ({ component: Component, ...otherProps }: IProps) => {\n\tconst user = useStoreState((state) => state.auth.user);\n\tif (user === null || user === undefined) {\n\t\treturn <Redirect to=\"/login\" />\n\t}\n\n\treturn (\n\t\t<Layout>\n\t\t\t<Route\n\t\t\t\trender={otherProps => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Component {...otherProps} />\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t/>\n\t\t</Layout>\n\t);\n};\n","import React, { useEffect, useState } from 'react'\r\nimport { useStoreActions, useStoreState } from '../../../store/hooks/easyPeasy';\r\nimport { Steps, Form, Input, Row, Col, InputNumber, Button, DatePicker, Upload, message, Tooltip, Table, Select, Divider, Space, Popconfirm } from 'antd';\r\nimport { ArrowLeftOutlined, ArrowRightOutlined, DeleteOutlined, PlusOutlined, SendOutlined, UploadOutlined } from '@ant-design/icons';\r\nimport logo from \"../../../../../src/assets/images/sp_logo.png\"\r\nimport { SelectDistrict } from '../../select/SelectDistrict'\r\nimport { SelectThana } from '../../select/SelectThana'\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport ImgCrop from 'antd-img-crop';\r\nconst { Step } = Steps;\r\nconst { Option } = Select;\r\nlet examTitleIndex = 0;\r\nlet examMajorIndex = 0;\r\n\r\nexport default function Signup(props) {\r\n\r\n    const partnerSignup = useStoreActions(state => state.partner.partnerSignup);\r\n    const signUpStatus = useStoreState(state => state.partner.signUpStatus);\r\n    const [step, setStep] = useState<number>(1);\r\n    const [signUpData, setSignUpData] = useState<any>()\r\n    const [basicInfo] = Form.useForm();\r\n    const [companyInfo] = Form.useForm();\r\n    const [bankInfo] = Form.useForm();\r\n    const [fileSave, setfileSave] = useState<boolean>(false);\r\n    const [fileName, setfileName] = useState<any>(\"\");\r\n    const [fileContent, setfileContent] = useState<any>(\"\");\r\n    const [disBtn, setdisBtn] = useState<boolean>(false);\r\n\r\n    const basicInfoForm = (value) => {\r\n        value.fileSave = fileSave;\r\n        value.businessIdentificationNo = \"123654789\";\r\n        value.fileName = fileSave;\r\n        value.fileName = fileName;\r\n        value.designation = value?.designation;\r\n        value.fileContent = fileContent;\r\n        value.birthDate = moment(value?.birthDate).format(\"YYYY-MM-DD\");\r\n        value.thanaId = value.thanaId?.thanaId;\r\n        value.corporateMobileNo = value.corporateMobileNo == undefined ? \"\" : value.corporateMobileNo;\r\n        value.postOffice = value.postOffice == undefined ? \"\" : value.postOffice;\r\n        value.village = value.village == undefined ? \"\" : value.village;\r\n        delete value.user_image;\r\n        delete value.district_id;\r\n        setSignUpData(value);\r\n        setStep(2);\r\n    };\r\n    const companyInfoForm = (value) => {\r\n        //console.log(value)\r\n        value.companyAddress = value.companyAddress == undefined ? \"\" : value.companyAddress;\r\n        value.companyName = value.companyName == undefined ? \"\" : value.companyName;\r\n        value.companyTinNo = value.companyTinNo == undefined ? \"\" : value.companyTinNo;\r\n        value.tradeLicenceNo = value.tradeLicenceNo == undefined ? \"\" : value.tradeLicenceNo;\r\n        let temp = Object.assign(signUpData, value)\r\n        setSignUpData(temp);\r\n        //console.log(signUpData)\r\n        setStep(4);\r\n    };\r\n\r\n    const bankInfoForm = (value) => {\r\n        value.swiftCode = value.swiftCode == undefined ? \"\" : value.swiftCode;\r\n        let temp = Object.assign(signUpData, value)\r\n        setSignUpData(temp);\r\n        //console.log(temp);\r\n        partnerSignup(temp);\r\n        // setStep(4)\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (signUpStatus) {\r\n            window.location.href = '/success'\r\n        }\r\n    }, [signUpStatus])\r\n\r\n    const onchangeDistrict = (val) => {\r\n        //   console.log(val)\r\n        setThanaId(null);\r\n        setdisId(val);\r\n    }\r\n    const [disId, setdisId] = useState<any>(null);\r\n\r\n    const onchangeThana = (val) => {\r\n        //   console.log(val)\r\n        setThanaId(val);\r\n    }\r\n    const [thanaId, setThanaId] = useState<any>(null);\r\n\r\n    const [educationData, seteducationData] = useState<any>([]);\r\n\r\n    const newObj = {\r\n        key: uuidv4(),\r\n        exam_title: '',\r\n        major: '',\r\n        institute: '',\r\n        result: '',\r\n        passing_year: '',\r\n        duration: '',\r\n    };\r\n\r\n    useEffect(() => {\r\n        seteducationData([newObj]);\r\n    }, [])\r\n\r\n    // console.log(educationData);\r\n\r\n    const [examTitle, setExamTitle] = useState<any>(['SSC', 'HSC', 'BSC', 'BA', 'MSC', 'MA']);\r\n    const [examName, setexamName] = useState<any>('');\r\n    const [examMajor, setexamMajor] = useState<any>(['Science ', 'Arts', 'Commerce']);\r\n    const [majorName, setmajorName] = useState<any>('');\r\n\r\n    const onExamNameChange = event => {\r\n        setexamName(event.target.value)\r\n    };\r\n\r\n    const addItemExamName = () => {\r\n        setExamTitle([...examTitle, examName || `Other ${examTitleIndex++}`])\r\n        setexamName('')\r\n    };\r\n    const onMajorNameChange = event => {\r\n        setmajorName(event.target.value)\r\n    };\r\n\r\n    const addItemMajorName = () => {\r\n        setexamMajor([...examMajor, majorName || `Other ${examMajorIndex++}`])\r\n        setmajorName('')\r\n    };\r\n\r\n    const onValueChangeSelect: any = (key, index) => (e: any) => {\r\n        const newData = [...educationData];\r\n        newData[index][key] = e;\r\n        seteducationData(newData);\r\n    };\r\n\r\n    const onValueChangeInput: any = (key, index) => (e: any) => {\r\n        const newData = [...educationData];\r\n        newData[index][key] = e.target.value;\r\n        seteducationData(newData);\r\n    };\r\n\r\n    // console.log(educationData);\r\n\r\n    const handleAddRow = (data) => {\r\n        //  console.log(data)\r\n        if (data.exam_title == '' || data.duration == '' || data.institute == '' || data.major == '' || data.passing_year == '' || data.result == '') {\r\n            message.error('Please insert in all fields');\r\n        } else {\r\n            const newData = [...educationData, newObj];\r\n            seteducationData(newData);\r\n        }\r\n    }\r\n    const handleDeleteExam = (key) => {\r\n        const temp = educationData.filter(item => item?.key != key)\r\n        seteducationData(temp);\r\n    }\r\n    const [yearList, setYearList] = useState<any>([2010, 2011])\r\n\r\n    function yearOption() {\r\n        let yearArr: any = [];\r\n        for (let k = 1975; k <= (new Date().getFullYear()); k++) {\r\n            yearArr.push(k)\r\n        }\r\n        //  console.log(new Date().getFullYear()-1975);\r\n        setYearList(yearArr)\r\n\r\n    }\r\n    useEffect(() => {\r\n        yearOption();\r\n    }, [])\r\n    const educationCol = [\r\n        {\r\n            title: 'Exam Title',\r\n            //  width: \"20%\",\r\n            // dataIndex: 'exam_title',\r\n            // key: 'exam_title',\r\n            render: (text, record, index) => (\r\n                <>\r\n                    <Select\r\n                        style={{ width: \"100%\" }}\r\n                        placeholder=\"Select Exam\"\r\n                        showSearch\r\n                        defaultValue={record?.exam_title == '' ? null : record?.exam_title}\r\n                        onChange={onValueChangeSelect(\"exam_title\", index)}\r\n                        dropdownRender={menu => (\r\n                            <div>\r\n                                {menu}\r\n                                <Divider style={{ margin: '4px 0' }} />\r\n                                <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\r\n                                    <Input style={{ flex: 'auto' }} value={examName} onChange={onExamNameChange} />\r\n                                    <a\r\n                                        style={{ flex: 'none', padding: '8px', display: 'block', cursor: 'pointer' }}\r\n                                        onClick={addItemExamName}\r\n                                    >\r\n                                        <PlusOutlined />\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    >\r\n                        options=      {examTitle.map(item => (\r\n                        <Option key={item} value={item}>{item}</Option>\r\n                    ))}\r\n                    </Select>\r\n\r\n\r\n                </>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Major/Group',\r\n            //dataIndex: 'major',\r\n            // key: 'major',\r\n            render: (text, record, index) => (\r\n                <>\r\n                    <Select\r\n                        style={{ width: \"100%\" }}\r\n                        placeholder=\"Select Major\"\r\n                        showSearch\r\n                        defaultValue={record?.major == '' ? null : record?.major}\r\n                        onChange={onValueChangeSelect(\"major\", index)}\r\n                        dropdownRender={menu => (\r\n                            <div>\r\n                                {menu}\r\n                                <Divider style={{ margin: '4px 0' }} />\r\n                                <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\r\n                                    <Input style={{ flex: 'auto' }} value={majorName} onChange={onMajorNameChange} />\r\n                                    <a\r\n                                        style={{ flex: 'none', padding: '8px', display: 'block', cursor: 'pointer' }}\r\n                                        onClick={addItemMajorName}\r\n                                    >\r\n                                        <PlusOutlined />\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    >\r\n                        options=      {examMajor.map(item => (\r\n                        <Option key={item} value={item}>{item}</Option>\r\n                    ))}\r\n                    </Select>\r\n\r\n\r\n                </>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Passing Year',\r\n            // dataIndex: 'passing_year',\r\n            //key: 'passing_year',\r\n            render: (text, record, index) => (\r\n                <>\r\n                    <Select\r\n                        style={{ width: \"100%\" }}\r\n                        placeholder=\"Select Year\"\r\n                        showSearch\r\n                        defaultValue={record?.passing_year == '' ? null : record?.passing_year}\r\n                        onChange={onValueChangeSelect(\"passing_year\", index)}\r\n\r\n                    >\r\n                        options=      {yearList.map(item => (\r\n                        <Option key={item} value={item}>{item}</Option>\r\n                    ))}\r\n                    </Select>\r\n\r\n\r\n                </>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Duration (Year)',\r\n            // dataIndex: 'duration',\r\n            // key: 'duration',\r\n            render: (text, record, index) => (\r\n                <>\r\n                    <Input\r\n                        placeholder=\"Duration\"\r\n                        maxLength={2}\r\n                        defaultValue={record?.duration == '' ? null : record?.duration}\r\n                        onChange={onValueChangeInput(\"duration\", index)}\r\n                    />\r\n\r\n                </>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Institute Name',\r\n            //dataIndex: 'institute',\r\n            // key: 'institute',\r\n            render: (text, record, index) => (\r\n                <>\r\n                    <Input\r\n                        placeholder=\"Institute\"\r\n                        maxLength={100}\r\n                        defaultValue={record?.institute == '' ? null : record?.institute}\r\n                        onChange={onValueChangeInput(\"institute\", index)}\r\n                    />\r\n\r\n                </>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Result',\r\n            //dataIndex: 'result',\r\n            //key: 'result',\r\n            render: (text, record, index) => (\r\n                <>\r\n                    <Input\r\n                        placeholder=\"Result\"\r\n                        maxLength={10}\r\n                        defaultValue={record?.result == '' ? null : record?.result}\r\n                        onChange={onValueChangeInput(\"result\", index)}\r\n                    />\r\n\r\n                </>\r\n            ),\r\n        },\r\n\r\n        {\r\n            title: 'Action',\r\n            render: (text: any, record: any, index) => (\r\n                <Space size=\"middle\">\r\n                    {educationData.length == index + 1 &&\r\n                        <Tooltip title={\"Add Record\"}>\r\n                            <Button type={\"primary\"} icon={<PlusOutlined />} onClick={() => handleAddRow(record)} />\r\n                        </Tooltip>\r\n                    }\r\n                    {educationData.length > 1 && educationData.length == index + 1 &&\r\n                        <Popconfirm\r\n                            title=\"Are you sure to delete?\"\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                            onConfirm={() => handleDeleteExam(record?.key)}\r\n                        >\r\n                            <Tooltip title=\"Delete\">\r\n                                <Button danger icon={<DeleteOutlined />} />\r\n                            </Tooltip>\r\n                        </Popconfirm>\r\n                    }\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n    const prevEducation = () => {\r\n        setStep(1)\r\n    };\r\n    const prevCompanyInfo = () => {\r\n        setStep(2)\r\n        // console.log(educationData)\r\n        // seteducationData(educationData)\r\n    };\r\n    const prevBankInfo = () => {\r\n        setStep(3)\r\n    };\r\n    const nextEducation = () => {\r\n        if (educationData[0]?.exam_title == '' || educationData[0]?.duration == '' || educationData[0]?.institute == '' || educationData[0]?.major == '' || educationData[0]?.passing_year == '' || educationData[0]?.result == '') {\r\n            message.error(\"Please insert minimum one educational background\")\r\n        } else {\r\n\r\n            let filtereducationData = educationData?.map(function (item) {\r\n                return {\r\n                    \"duration\": item.duration,\r\n                    \"examTitle\": item.exam_title,\r\n                    \"instituteName\": item.institute,\r\n                    \"major\": item.major,\r\n                    \"passingYear\": item.passing_year,\r\n                    \"result\": item.result,\r\n                }\r\n            })\r\n            signUpData.educationInfos = filtereducationData;\r\n            setStep(3)\r\n        }\r\n    };\r\n    const [fileList, setFileList] = useState<any>([\r\n    ]);\r\n\r\n    const onChangeFile = ({ fileList: newFileList }) => {\r\n        // console.log(newFileList);\r\n        if (newFileList.length == 0) {\r\n            setfileSave(false);\r\n            setfileName(\"\");\r\n            setfileContent(\"\");\r\n        }\r\n        if (newFileList.length == 1) {\r\n            newFileList[0].status = \"done\"\r\n            setfileSave(true);\r\n            setfileName(newFileList[0]?.name);\r\n            setdisBtn(true)\r\n            setTimeout(() => {\r\n                setfileContent(newFileList[0]?.thumbUrl.split(',')[1]);\r\n                setdisBtn(false)\r\n            }, 2000);\r\n\r\n        }\r\n        setFileList(newFileList);\r\n    };\r\n\r\n    const layout = {\r\n        labelCol: { span: 8 },\r\n        wrapperCol: { span: 16 },\r\n    };\r\n\r\n    const onPreview = async file => {\r\n        let src = file.url;\r\n        if (!src) {\r\n            src = await new Promise(resolve => {\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(file.originFileObj);\r\n                reader.onload = () => resolve(reader.result);\r\n                //console.log(reader.result);\r\n            });\r\n        }\r\n        const image = new Image();\r\n        image.src = src;\r\n        const imgWindow: any = window.open(src);\r\n        imgWindow.document.write(image.outerHTML);\r\n    };\r\n\r\n    return (\r\n        <div className=\"signupPage-wrapper-full\">\r\n            <div className=\"login-form-wrapper\">\r\n                <div className=\"overlay-9\">\r\n                    <div className=\"logo-wrapper\">\r\n                    <img className=\"loginLogo\" src={logo} alt=\"login_logo\" />\r\n                    <p className=\"page-title\">Sheba Suite</p>\r\n                </div>\r\n                <div className=\"signupPage-wrapper\">\r\n                    <div className=\"signupPage\">\r\n                        <div className=\"loginBack\">\r\n                            Already Registerd? <Link to=\"/login\">Back to login</Link>\r\n                        </div>\r\n                        <Steps current={step - 1}>\r\n                            <Step title=\"Basic Info\" />\r\n                            <Step title=\"Education Info\" />\r\n                            <Step title=\"Comapny Info\" />\r\n                            <Step title=\"Bank Info\" />\r\n                        </Steps>\r\n                        {step === 1 &&\r\n                            <Form\r\n                                layout=\"horizontal\"\r\n                                {...layout}\r\n                                onFinish={basicInfoForm}\r\n                                id=\"basic-info\"\r\n                                form={basicInfo}\r\n                                className=\"custom-form\"\r\n                                \r\n                            >\r\n                                <Row gutter={8}>\r\n                                    <Col xs={24} sm={24} md={24} lg={18} xl={18}>\r\n                                        <Form.Item\r\n                                            name=\"partnerName\"\r\n                                            label=\"Name:\"\r\n                                            className=\"title-Text\"\r\n                                            rules={[\r\n                                                { required: true, message: \"Please write name\" },\r\n                                                {\r\n                                                    max: 60,\r\n                                                    message: \"Name cannot be more than 60 characters.\",\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input type=\"text\" placeholder=\"Name\"></Input>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={24} lg={18} xl={18}>\r\n                                        <Form.Item\r\n                                            name=\"fatherName\"\r\n                                            label=\"Father Name:\"\r\n                                            className=\"title-Text\"\r\n                                            rules={[\r\n                                                { required: true, message: \"Please write father name\" },\r\n                                                {\r\n                                                    max: 60,\r\n                                                    message: \"Father name cannot be more than 60 characters.\",\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input type=\"text\" placeholder=\"Father's Name\"></Input>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={24} lg={18} xl={18}>\r\n                                        <Form.Item\r\n                                            name=\"motherName\"\r\n                                            label=\"Mather Name:\"\r\n                                            className=\"title-Text\"\r\n                                            rules={[\r\n                                                { required: true, message: \"Please write mother name\" },\r\n                                                {\r\n                                                    max: 60,\r\n                                                    message: \"Mother name cannot be more than 60 characters.\",\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input type=\"text\" placeholder=\"Mother's Name\"></Input>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={24} lg={18} xl={18}>\r\n                                        <Form.Item\r\n                                            name=\"personalMobileNo\"\r\n                                            label=\"Personal Number:\"\r\n                                            className=\"title-Text\"\r\n\r\n                                            rules={[\r\n                                                { required: true, message: \"Please write your number\", },\r\n                                            ]}\r\n                                        >\r\n                                            <Input type=\"text\" placeholder=\"01711.....\"></Input>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={24} lg={18} xl={18}>\r\n                                        <Form.Item\r\n                                            name=\"corporateMobileNo\"\r\n                                            label=\"Corporate Number:\"\r\n                                            className=\"title-Text\"\r\n                                            rules={[\r\n                                                { required: false, message: \"Please write your number\", },\r\n\r\n                                            ]}\r\n                                        >\r\n                                            <Input type=\"text\" placeholder=\"01711.....\"></Input>\r\n\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={24} lg={18} xl={18}>\r\n                                        <Form.Item\r\n                                            name=\"email\"\r\n                                            label=\"Email:\"\r\n                                            className=\"title-Text\"\r\n                                            rules={[\r\n                                                { required: true, message: \"Please write your email address\" },\r\n                                                {\r\n                                                    max: 60,\r\n                                                    type: 'email',\r\n                                                    message: \"Pleaset Insert valid email.\",\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input type=\"text\" placeholder=\"example@gmail.com\"></Input>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={24} lg={18} xl={18}>\r\n                                        <Form.Item\r\n                                            name=\"nationalIdNo\"\r\n                                            label=\"National Id:\"\r\n                                            className=\"title-Text\"\r\n                                            rules={[\r\n                                                { required: true, message: \"Please enter your national id\" },\r\n                                            ]}\r\n                                        >\r\n                                            <Input type=\"text\" placeholder=\"NID\"></Input>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={24} lg={18} xl={18}>\r\n                                        <Form.Item\r\n                                            name=\"birthDate\"\r\n                                            label=\"Date of Birth:\"\r\n                                            className=\"title-Text\"\r\n                                            rules={[\r\n                                                { required: true, message: \"Please enter your date of birth\" },\r\n                                            ]}\r\n                                        >\r\n                                            <DatePicker placeholder=\"Date of birth\" style={{ width: \"100%\" }} allowClear format={'YYYY-MM-DD'} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={24} lg={18} xl={18}>\r\n                                        <Form.Item\r\n                                            name=\"tinNo\"\r\n                                            label=\"TIN No:\"\r\n                                            className=\"title-Text\"\r\n                                            rules={[\r\n                                                { required: true, message: \"Please enter your TIN no.\" },\r\n                                            ]}\r\n                                        >\r\n                                            <Input type=\"text\" placeholder=\"TIN No\"></Input>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={24} lg={18} xl={18}>\r\n                                        <Form.Item\r\n                                            name=\"district_id\"\r\n                                            label=\"District:\"\r\n                                            className=\"title-Text\"\r\n                                            rules={[\r\n                                                { required: true, message: \"Please select your district\", },\r\n                                            ]}\r\n                                        >\r\n                                            <SelectDistrict onChange={(val) => onchangeDistrict(val)} selected={disId}\r\n\r\n                                            />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={24} lg={18} xl={18}>\r\n                                        <Form.Item\r\n                                            name=\"thanaId\"\r\n                                            label=\"Thana:\"\r\n                                            className=\"title-Text\"\r\n                                            rules={[\r\n                                                { required: true, message: \"Please select your thana\", },\r\n                                            ]}\r\n                                        >\r\n                                            <SelectThana onChange={(val) => onchangeThana(val)} selected={thanaId}\r\n\r\n                                            />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={24} lg={18} xl={18}>\r\n                                        <Form.Item\r\n                                            name=\"postOffice\"\r\n                                            label=\"Post Office:\"\r\n                                            className=\"title-Text\"\r\n                                        >\r\n                                            <Input type=\"text\" placeholder=\"Enter post office\"></Input>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={24} lg={18} xl={18}>\r\n                                        <Form.Item\r\n                                            name=\"postalCode\"\r\n                                            label=\"Postal Code:\"\r\n                                            className=\"title-Text\"\r\n                                        >\r\n                                            <Input type=\"text\" placeholder=\"Enter postaL code\"></Input>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={24} lg={18} xl={18}>\r\n                                        <Form.Item\r\n                                            name=\"village\"\r\n                                            label=\"Village:\"\r\n                                            className=\"title-Text\"\r\n                                        >\r\n                                            <Input type=\"text\" placeholder=\"Enter village\"></Input>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={24} lg={18} xl={18}>\r\n                                        <Form.Item\r\n                                            name=\"designation\"\r\n                                            label=\"Designation:\"\r\n                                            className=\"title-Text\"\r\n                                            rules={[\r\n                                                { required: true, message: \"Please select your designation\", },\r\n                                            ]}\r\n                                        >\r\n                                               <Select placeholder=\"Select Designation\" style={{ width: \"100%\" }} allowClear>\r\n      <Option value=\"PIP\">PIP</Option>\r\n      <Option value=\"APIP\">APIP</Option>\r\n    </Select>\r\n\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={24} lg={18} xl={18}>\r\n                                        <Form.Item\r\n                                            name=\"user_image\"\r\n                                            label=\"Photo:\"\r\n                                            className=\"title-Text\"\r\n                                        >\r\n                                            <ImgCrop rotate>\r\n                                                <Upload\r\n                                                    //action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                                                    listType=\"picture\"\r\n                                                    accept=\"image/png, image/jpeg\"\r\n                                                    fileList={fileList}\r\n                                                    onChange={onChangeFile}\r\n                                                    onPreview={onPreview}\r\n                                                >\r\n                                                    {fileList.length < 1 && <><Button icon={<UploadOutlined />}>Upload</Button></>}\r\n                                                </Upload>\r\n                                            </ImgCrop>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={18} lg={18}>\r\n                                        <Space size=\"small\" style={{ float: \"right\" }}>\r\n                                            <Button type=\"primary\" htmlType=\"submit\" disabled={disBtn} icon={<ArrowRightOutlined />}>\r\n                                                Next\r\n                                            </Button>\r\n                                        </Space>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        }\r\n                        {step === 2 &&\r\n                            <>\r\n                                <br />\r\n                                <Table bordered={true} dataSource={educationData} columns={educationCol} />\r\n                                <br />\r\n                                <Space size=\"small\" style={{ float: \"right\" }}>\r\n                                    <Button type=\"primary\" icon={<ArrowLeftOutlined />} onClick={() => prevEducation()}>\r\n                                        Previous\r\n                                    </Button>\r\n                                    <Button type=\"primary\" icon={<ArrowRightOutlined />} onClick={() => nextEducation()}>\r\n                                        Next\r\n                                    </Button>\r\n                                </Space>\r\n\r\n                            </>\r\n                        }\r\n                        {step === 3 &&\r\n                            <>\r\n                                <br />\r\n                                <Form\r\n                                    layout=\"vertical\"\r\n                                    onFinish={companyInfoForm}\r\n                                    id=\"company-info\"\r\n                                    form={companyInfo}\r\n                                >\r\n                                    <Row gutter={8}>\r\n                                        {/* //////////////// */}\r\n                                        <Col xs={24} sm={24} md={24} lg={12} xl={12}>\r\n                                            <Form.Item\r\n                                                name=\"companyName\"\r\n                                                label=\"Company Name:\"\r\n                                                className=\"title-Text\"\r\n                                            >\r\n                                                <Input type=\"text\" placeholder=\"Company Name\"></Input>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={24} md={24} lg={12} xl={12}>\r\n                                            <Form.Item\r\n                                                name=\"companyAddress\"\r\n                                                label=\"Company Address:\"\r\n                                                className=\"title-Text\"\r\n                                            >\r\n                                                <Input type=\"text\" placeholder=\"Company Address\"></Input>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={24} md={24} lg={12} xl={12}>\r\n                                            <Form.Item\r\n                                                name=\"tradeLicenceNo\"\r\n                                                label=\"Trade License No:\"\r\n                                                className=\"title-Text\"\r\n                                            >\r\n                                                <Input type=\"text\" placeholder=\"Trade License No\"></Input>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={24} md={24} lg={12} xl={12}>\r\n                                            <Form.Item\r\n                                                name=\"companyTinNo\"\r\n                                                label=\"Business Tin No:\"\r\n                                                className=\"title-Text\"\r\n                                            >\r\n                                                <Input type=\"text\" placeholder=\"Tin No\"></Input>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <br />\r\n                                    <Space size=\"small\" style={{ float: \"right\" }}>\r\n                                        <Button type=\"primary\" icon={<ArrowLeftOutlined />} onClick={() => prevCompanyInfo()}>\r\n                                            Previous\r\n                                    </Button>\r\n                                        <Button type=\"primary\" icon={<ArrowRightOutlined />} htmlType=\"submit\" >\r\n                                            Next\r\n                                    </Button>\r\n                                    </Space>\r\n                                </Form>\r\n                            </>\r\n                        }\r\n                        {step === 4 &&\r\n                            <>\r\n                                <br />\r\n                                <Form\r\n                                    layout=\"vertical\"\r\n                                    onFinish={bankInfoForm}\r\n                                    id=\"bank-info\"\r\n                                    form={bankInfo}\r\n                                >\r\n                                    <Row gutter={8}>\r\n                                        {/* //////////////// */}\r\n                                        <Col xs={24} sm={24} md={24} lg={8} xl={8}>\r\n                                            <Form.Item\r\n                                                name=\"accountHolderName\"\r\n                                                label=\"Account Holder Name:\"\r\n                                                className=\"title-Text\"\r\n                                                rules={[\r\n                                                    { required: true, message: \"Please enter bank account name\" },\r\n                                                ]}\r\n                                            >\r\n                                                <Input type=\"text\" placeholder=\"Account Holder Name\"></Input>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={24} md={24} lg={8} xl={8}>\r\n                                            <Form.Item\r\n                                                name=\"bankName\"\r\n                                                label=\"Bank Name:\"\r\n                                                className=\"title-Text\"\r\n                                                rules={[\r\n                                                    { required: true, message: \"Please enter bank name\" },\r\n                                                ]}\r\n                                            >\r\n                                                <Input type=\"text\" placeholder=\"Bank Name\"></Input>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={24} md={24} lg={8} xl={8}>\r\n                                            <Form.Item\r\n                                                name=\"branchName\"\r\n                                                label=\"Branch Name:\"\r\n                                                className=\"title-Text\"\r\n                                                rules={[\r\n                                                    { required: true, message: \"Please enter bank's branch name\" },\r\n                                                ]}\r\n                                            >\r\n                                                <Input type=\"text\" placeholder=\"Branch Name\"></Input>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={24} md={24} lg={8} xl={8}>\r\n                                            <Form.Item\r\n                                                name=\"accountNo\"\r\n                                                label=\"Account No:\"\r\n                                                className=\"title-Text\"\r\n                                                rules={[\r\n                                                    { required: true, message: \"Please enter account no\" },\r\n                                                ]}\r\n                                            >\r\n                                                <Input type=\"text\" placeholder=\"Account No\"></Input>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={24} md={24} lg={8} xl={8}>\r\n                                            <Form.Item\r\n                                                name=\"swiftCode\"\r\n                                                label=\"Swift Code:\"\r\n                                                className=\"title-Text\"\r\n\r\n                                            >\r\n                                                <Input type=\"text\" placeholder=\"Swift Code\"></Input>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={24} md={24} lg={8} xl={8}>\r\n                                            <Form.Item\r\n                                                name=\"routingNo\"\r\n                                                label=\"Routing No:\"\r\n                                                className=\"title-Text\"\r\n                                                rules={[\r\n                                                    { required: true, message: \"Please enter routing no\" },\r\n                                                ]}\r\n                                            >\r\n                                                <Input type=\"text\" placeholder=\"Routing No\"></Input>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={24} md={24} lg={12} xl={12}>\r\n                                            <Form.Item\r\n                                                name=\"accountType\"\r\n                                                label=\"Account Type:\"\r\n                                                className=\"title-Text\"\r\n                                                rules={[\r\n                                                    { required: true, message: \"Please enter your bank's registered mobile no\" },\r\n                                                ]}\r\n                                            >\r\n                                                <Select placeholder=\"Select Account Type\" allowClear>\r\n                                                    <Option value=\"savings\">Savings</Option>\r\n                                                    <Option value=\"current\">Current</Option>\r\n                                                </Select>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={24} md={24} lg={12} xl={12}>\r\n                                            <Form.Item\r\n                                                name=\"bankAccountMobileNo\"\r\n                                                label=\"Mobile No(Of Bank Account):\"\r\n                                                className=\"title-Text\"\r\n                                                rules={[\r\n                                                    { required: true, message: \"Please enter your bank's registered mobile no\" },\r\n                                                ]}\r\n                                            >\r\n                                                <Input type=\"text\" placeholder=\"Mobile No\"></Input>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <br />\r\n                                    <Space size=\"small\" style={{ float: \"right\" }}>\r\n                                        <Button type=\"primary\" icon={<ArrowLeftOutlined />} onClick={() => prevBankInfo()}>\r\n                                            Previous\r\n                                    </Button>\r\n                                        <Button type=\"primary\" icon={<SendOutlined />} htmlType=\"submit\" >\r\n                                            Submit\r\n                                    </Button>\r\n                                    </Space>\r\n                                </Form>\r\n                            </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Button, Result } from 'antd'\r\nimport React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Dashboard(props) {\r\n\r\n    return (\r\n        <>\r\n            <br />\r\n            <Result\r\n                status=\"success\"\r\n                title=\"Your request has been submitted\"\r\n                subTitle=\"You will get notified once you get approved by an admin.\"\r\n                extra={[\r\n                    <Link to=\"/login\">                    <Button type=\"primary\" key=\"console\">\r\n                        Back to login\r\n  </Button></Link>\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport './assets/styles.css';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Container from './app/Container';\r\nimport { Login } from './app/components/auth/Login';\r\nimport { Authenticated } from './app/components/auth/Authenticated';\r\nimport { useStoreActions, useStoreState } from './app/store/hooks/easyPeasy';\r\nimport Signup from './app/container/pages/signup/Signup.page';\r\nimport Success from './app/container/pages/signup/Success.page';\r\nfunction App() {\r\n\tconst checkAuth = useStoreActions(state => state.auth.checkAuth);\r\n\tcheckAuth(1);\r\n\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path=\"/login\">\r\n\t\t\t\t\t<Login />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route exact path=\"/signup\">\r\n\t\t\t\t\t<Signup />\r\n\t\t\t\t</Route>\t\t\t\t\r\n\t\t\t\t<Route exact path=\"/success\">\r\n\t\t\t\t\t<Success />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Authenticated path=\"/\" component={Container} />\r\n\t\t\t</Switch>\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import { token } from '../store/states/auth/auth';\n\nconst API_BASE = process.env.REACT_APP_API_ROOT\n\nexport const request = (url: string, method: string, payload?: any, headers?: any) => {\n\n\n    headers = headers || {};\n\n    if (token) {\n        headers['Authorization'] = `Bearer ${token}`;\n    }\n\n    url = API_BASE + url;\n\n    return fetch(url, {\n        method,\n        mode: 'cors',\n        cache: 'no-cache',\n        headers: {\n            'Content-Type': 'application/json', ...headers\n        },\n        body: JSON.stringify(payload)\n    })\n}\n\nexport const requestAuth = (url: string, method: string, payload?: any, headers?: any) => {\n\n    let myHeaders = new Headers();\n    myHeaders.append(\"Authorization\", \"Basic Y29tbXVuaXR5LXNoZWJhLXdlYi1yZWFkLXdyaXRlLWNsaWVudDoxMjM0\");\n    let formdata = new FormData();\n    formdata.append(\"grant_type\", \"password\");\n    formdata.append(\"username\", payload?.username);\n    formdata.append(\"password\", payload?.password);\n\n    url = API_BASE + url;\n\n    return fetch(url, {\n        method,\n        mode: 'cors',\n        cache: 'no-cache',\n        headers: myHeaders,\n        body: formdata\n    })\n}\n\nexport const removeTokenFunction = (url: string, method: string, payload?: any, headers?: any) => {\n\n    let myHeaders = new Headers();\n    myHeaders.append(\"Authorization\", `bearer ${payload}`);\n    url = API_BASE + url;\n\n    return fetch(url, {\n        method,\n        mode: 'cors',\n        cache: 'no-cache',\n        headers: myHeaders,\n\n    })\n}\n\n\nexport const requestFileUpload = (url: string, method: string, payload?: any, headers?: any) => {\n\n    headers = headers || {};\n\n    if (token) {\n        headers['Authorization'] = `Bearer ${token}`;\n    }\n\n    url = API_BASE + url;\n\n    return fetch(url, {\n        method,\n        mode: 'cors',\n        cache: 'no-cache',\n        headers: {\n            ...headers\n        },\n        body: payload\n    })\n}\n\n\nexport const postAuth = (url: string, payload: any) => {\n    return requestAuth(url, 'POST', payload);\n}\nexport const removeToken = (url: string, payload: any) => {\n    return removeTokenFunction(url, 'GET', payload);\n}\n\nexport const post = (url: string, payload: any) => {\n    return request(url, 'POST', payload);\n}\n\nexport const get = (url: string) => {\n    return request(url, 'GET');\n}\n\nexport const postFile = (url: string, payload: any) => {\n    return requestFileUpload(url, 'POST', payload);\n}\nexport const del = (url: string) => {\n    return request(url, 'DELETE');\n}\n\nexport const patch = (url: string, payload: any) => {\n    return request(url, 'PATCH', payload);\n}\n\nexport const deleteItem = (url: string) => {\n    return request(url, 'DELETE');\n}\n\nexport const update = (url: string, paylad: any) => {\n    return request(url, 'PATCH', paylad);\n}\n","import { post, get, patch, postFile, postAuth , removeToken} from \"../http\";\n\nexport interface AuthRequest {\n  username: string;\n  password: string;\n}\n\nexport const login = (auth: AuthRequest) => {\n  return postAuth(\"/oauth/token\", auth);\n};\nexport const logout = (payload: string) => {\n  return removeToken(\"/user/oauth/revoke-token\", payload);\n};\n","import { Action, Thunk, thunk, action } from 'easy-peasy';\nimport { login, logout } from '../../../http/auth/auth';\n\nexport interface Auth {\n\tuser: any | undefined,\n\tcheckAuth: Thunk<Auth, any>;\n\tauthenticated: Action<Auth, any>;\n\tauthenticate: Thunk<Auth, any>;\n\tlogout: Action<Auth, any>;\n\tloginFailed: Action<Auth, string>;\n\terror?: string;\n\tbusy?: boolean;\n\tsetBusy: Action<Auth, boolean>;\n\tlogoutclear: Thunk<Auth, any>;\n}\n\nexport let token: string | undefined = undefined;\n\nexport const authStore: Auth = {\n\tuser: undefined,\n\tcheckAuth: thunk(async (actions) => {\n\t\tconst jwt:any = localStorage.getItem(\"jwt\");\n\n\t\tif (jwt) {\n\t\t\ttry {\n\t\t\t\tactions.authenticated(JSON.parse(jwt));\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(\"[Auth] Failed\");\n\t\t\t}\n\t\t}\n\t}),\n\tauthenticate: thunk(async (actions, payload) => {\n\t\tconst response = await login(payload);\n\t\tif (response.status === 201 || response.status === 200) {\n\t\t\tconst body = await response.json();\n\t\t\tconsole.log(body)\n\t\t\tif (payload.remember) {\n\t\t\t\tlocalStorage.setItem(\"jwt\", JSON.stringify(body));\n\t\t\t} else {\n\t\t\t\tlocalStorage.removeItem(\"jwt\");\n\t\t\t}\n\n\t\t\tactions.authenticated(body);\n\t\t} else {\n\t\t\t//const body = await response.json();\n\t\t\tactions.loginFailed(\"Invalid Username/Password\");\n\t\t}\n\t}),\n\tauthenticated: action((state, auth) => {\n\t\ttoken=auth?.access_token\n\t\tstate.user = auth;\n\t}),\n\tsetBusy: action((state, isbusy) => {\n\t\tstate.busy = isbusy;\n\t}),\n\tloginFailed: action((state, message) => {\n\t\tstate.busy = false;\n\t\tstate.error = message;\n\t}),\n\tlogout: action((state, payload) => {\n\t\tconsole.log(payload)\n\t\t//const response = logout(payload);\n\t\tlocalStorage.removeItem(\"jwt\");\n\t\tstate.user = undefined;\n\t\tstate.busy = false;\n\t\tstate.error = \"\";\n\t\twindow.location.reload()\n\t}),\n\tlogoutclear: thunk(async (actions, payload) => {\n\t\tconsole.log(payload)\n\t\tconst response = await logout(payload);\n\t\tif (response.status === 201 || response.status === 200) {\n\t\t\tconsole.log(\"Clear\")\n\t\t} else console.log(\"Error\")\n\t})\n}\n","import { post, get} from \"../http\";\r\n\r\n\r\nexport const fetchpartnerProfile = () => get(\"/partner/profile\");\r\nexport const fetchDistrictList = () => get(\"/location/info/district-list\");\r\nexport const fetchThanaList = (id) => get(`/location/info/thana-list/by/district-id?districtId=${id}`);\r\n","import { Action, Thunk, thunk, action } from 'easy-peasy';\r\nimport { fetchDistrictList, fetchThanaList, fetchpartnerProfile } from '../../../http/common/common';\r\n\r\nexport interface Common {\r\n\tdistrictList: any,\r\n\tthanaList: any,\r\n\tsetdistrictList: Action<Common, any>;\r\n\tsetthanaList: Action<Common, any>;\r\n\tdistrictListFetch: Thunk<Common>;\r\n\tthanaListFetch: Thunk<Common>;\r\n\tpartnerProfile: any;\r\n\tsetpartnerProfile: Action<Common, any>;\r\n\tfetchpartnerProfile: Thunk<Common>\r\n}\r\n\r\nexport const commonStore: Common = {\r\n\tdistrictList: null,\r\n\tthanaList: null,\r\n\tpartnerProfile: null,\r\n\tdistrictListFetch: thunk(async (actions) => {\r\n\t\tconst response = await fetchDistrictList();\r\n\t\tif (response.status === 201 || response.status === 200) {\r\n\t\t\tconst body = await response.json();\r\n\t\t\t//console.log(body)\r\n\t\t\tactions.setdistrictList(body?.item);\r\n\t\t} else {\r\n\t\t\t//const body = await response.json();\r\n\t\t\t//actions.loginFailed(\"Invalid Username/Password\");\r\n\t\t}\r\n\t}),\r\n\tthanaListFetch: thunk(async (actions, id) => {\r\n\t\tconst response = await fetchThanaList(id);\r\n\t\tif (response.status === 201 || response.status === 200) {\r\n\t\t\tconst body = await response.json();\r\n\t\t\t//console.log('hello',body)\r\n\t\t\tactions.setthanaList(body?.item);\r\n\t\t} else {\r\n\t\t\t//const body = await response.json();\r\n\t\t\t//actions.loginFailed(\"Invalid Username/Password\");\r\n\t\t}\r\n\t}),\r\n\tsetdistrictList: action((state, payload) => {\r\n\t\tstate.districtList = payload;\r\n\t}),\r\n\tsetthanaList: action((state, payload) => {\r\n\t\tstate.thanaList = payload;\r\n\t}),\r\n\r\n\tfetchpartnerProfile: thunk(async (actions) => {\r\n\t\tconst response = await fetchpartnerProfile();\r\n\t\tif (response.status === 201 || response.status === 200) {\r\n\t\t\tconst body = await response.json();\r\n\t\t\t//console.log(body)\r\n\t\t\tactions.setpartnerProfile(body?.item);\r\n\t\t} else {\r\n\t\t\t//const body = await response.json();\r\n\t\t\t//actions.loginFailed(\"Invalid Username/Password\");\r\n\t\t}\r\n\t}),\r\n\tsetpartnerProfile: action((state, payload) => {\r\n\t\tstate.partnerProfile = payload;\r\n\t}),\r\n\r\n}\r\n","import { post, get, del} from \"../http\";\r\n\r\n\r\nexport const pendingList = () => get(\"\");\r\nexport const partnerSignup = (payload) => post(\"/public/partner/sign-up\",payload);\r\nexport const fetchPendingList = () => get(\"/pending/partner/view\");\r\nexport const fetchpartnerListByLevel = (payload) => get(`/partner/list/by/level?level=${payload}`);\r\nexport const partnerAssign = (payload) => post(\"/partner/assign\",payload);\r\nexport const applicantPartnerDelete = (payload) => del(`/partner/applicant/delete?partnerId=${payload}`);","import { notification } from 'antd';\r\nimport { Action, Thunk, thunk, action } from 'easy-peasy';\r\nimport { pendingList, partnerSignup, fetchPendingList, fetchpartnerListByLevel, partnerAssign, applicantPartnerDelete } from '../../../http/partner/partner';\r\n\r\nexport interface Partner {\r\n\tpendingList: any,\r\n\tsignUpStatus: any,\r\n\tunderPartnerList: any,\r\n\tsetUnderPartner: Action<Partner, any>;\r\n\tsetSignUpStatus: Action<Partner, any>;\r\n\tsetPendingListItem: Action<Partner, any>;\r\n\tpartnerSignup: Thunk<Partner, any>;\r\n\tpartnerAssign: Thunk<Partner, any>;\r\n\tfetchPendingList: Thunk<Partner>;\r\n\tfetchpartnerListByLevel: Thunk<Partner>;\r\n\tapplicantPartnerDelete: Thunk<Partner, any>;\r\n}\r\n\r\nexport const partnerStore: Partner = {\r\n\tsignUpStatus: false,\r\n\tpendingList: [],\r\n\tunderPartnerList: [],\r\n\tpartnerSignup: thunk(async (actions, payload) => {\r\n\t\tconst response = await partnerSignup(payload);\r\n\t\t//console.log(response)\r\n\t\tif (response.status === 201) {\r\n\t\t\tconst body: any = await response.json();\r\n\t\t\t//console.log(body)\r\n\t\t\tif (body.messageType == 1) {\r\n\t\t\t\tactions.setSignUpStatus(true);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//const body = await response.json();\r\n\t\t\tactions.setSignUpStatus(null);\r\n\t\t}\r\n\t}),\r\n\tfetchPendingList: thunk(async (actions, payload) => {\r\n\t\tconst response = await fetchPendingList();\r\n\t\tif (response.status === 200) {\r\n\t\t\tconst body: any = await response.json();\r\n\t\t\tif (body.messageType == 1) {\r\n\t\t\t\tactions.setPendingListItem(body.item);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//const body = await response.json();\r\n\t\t\tactions.setPendingListItem([]);\r\n\t\t}\r\n\t}),\r\n\tfetchpartnerListByLevel: thunk(async (actions, payload) => {\r\n\t\tconst response = await fetchpartnerListByLevel(payload);\r\n\t\tif (response.status === 200) {\r\n\t\t\tconst body: any = await response.json();\r\n\t\t\tif (body.messageType == 1) {\r\n\r\n\t\t\t\tlet value = body.item?.map(function (item) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: item?.partnerId,\r\n\t\t\t\t\t\tlabel: item?.partnerName\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tactions.setUnderPartner(value);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//const body = await response.json();\r\n\t\t\tactions.setUnderPartner([]);\r\n\t\t}\r\n\t}),\r\n\r\n\tpartnerAssign: thunk(async (actions, payload) => {\r\n\t\tconst response = await partnerAssign(payload);\r\n\t\t//console.log(response)\r\n\t\tif (response.status === 201 || response.status === 200) {\r\n\t\t\tconst body: any = await response.json();\r\n\r\n\t\t\tnotification['success']({\r\n\t\t\t\tmessage: 'Partner Assign',\r\n\t\t\t\tdescription: 'Selected partner has been assigned successfully',\r\n\t\t\t});\r\n\t\t\tconst newresponse = await fetchPendingList();\r\n\t\t\tif (newresponse.status === 200) {\r\n\t\t\t\tconst body: any = await newresponse.json();\r\n\t\t\t\tif (body.messageType == 1) {\r\n\t\t\t\t\tactions.setPendingListItem(body.item);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t//const body = await response.json();\r\n\t\t\t\tactions.setPendingListItem([]);\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\t//const body = await response.json();\r\n\t\t\tnotification['error']({\r\n\t\t\t\tmessage: 'Partner Assign',\r\n\t\t\t\tdescription: 'Something went wrong ',\r\n\t\t\t});\r\n\t\t\t//\tactions.setSignUpStatus(null);\r\n\t\t}\r\n\t}),\r\n\r\n\tapplicantPartnerDelete: thunk(async (actions, payload) => {\r\n\t\tconst response = await applicantPartnerDelete(payload);\r\n\t\t//console.log(response)\r\n\t\tif (response.status === 201 || response.status === 200) {\r\n\t\t\tconst body: any = await response.json();\r\n\r\n\t\t\tnotification['success']({\r\n\t\t\t\tmessage: 'Partner Assign',\r\n\t\t\t\tdescription: 'Selected partner request has been deleted successfully',\r\n\t\t\t});\r\n\t\t\tconst newresponse = await fetchPendingList();\r\n\t\t\tif (newresponse.status === 200) {\r\n\t\t\t\tconst body: any = await newresponse.json();\r\n\t\t\t\tif (body.messageType == 1) {\r\n\t\t\t\t\tactions.setPendingListItem(body.item);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t//const body = await response.json();\r\n\t\t\t\tactions.setPendingListItem([]);\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\t//const body = await response.json();\r\n\t\t\tnotification['error']({\r\n\t\t\t\tmessage: 'Partner Assign',\r\n\t\t\t\tdescription: 'Something went wrong ',\r\n\t\t\t});\r\n\t\t\t//\tactions.setSignUpStatus(null);\r\n\t\t}\r\n\t}),\r\n\r\n\r\n\tsetUnderPartner: action((state, payload) => {\r\n\t\tstate.underPartnerList = payload;\r\n\t}),\r\n\tsetSignUpStatus: action((state, payload) => {\r\n\t\tstate.signUpStatus = payload;\r\n\t}),\r\n\tsetPendingListItem: action((state, payload) => {\r\n\t\tstate.pendingList = payload;\r\n\t}),\r\n\r\n}\r\n","import { post, get, del} from \"../http\";\r\n\r\nexport const postsaveProductOrder = (payload) => post(\"/product/order/save\", payload);\r\nexport const fetchproductList = () => get(\"/product/list\");\r\nexport const fetchpendingProductOrderList = () => get(\"/product/order/pending/list\");\r\nexport const fetchpreApproveProductOrderList = () => get(\"/product/order/pre-approve/list\");\r\nexport const deleteProductOrder = (payload) => del(\"/product/order/delete?productOrderId=\"+payload);\r\nexport const fetchpackageListByProductId = (payload) => get(\"/product/package/list/by/product-id?productId=\"+payload);\r\nexport const approveProductOrder = (payload) => post(\"/product/order/approve?productOrderId=\"+payload, payload);\r\nexport const preApproveProductOrder = (payload) => post(\"/product/order/pre-approve?productOrderId=\"+payload, payload);\r\nexport const fetchclientList = (payload) => get(\"/client-details/yearly/list/by/product-custom-id?productCustomId=\"+payload);","import { notification } from 'antd';\r\nimport { Action, Thunk, thunk, action } from 'easy-peasy';\r\nimport { fetchproductList, fetchpackageListByProductId, postsaveProductOrder, fetchpendingProductOrderList, deleteProductOrder, approveProductOrder, preApproveProductOrder, fetchpreApproveProductOrderList, fetchclientList } from '../../../http/partner/order';\r\n\r\nexport interface Order {\r\n    productList: any,\r\n    setproductList: Action<Order, any>;\r\n    fetchproductList: Thunk<Order>;\r\n    clientList: any,\r\n    setclientList: Action<Order, any>;\r\n    fetchclientList: Thunk<Order, any>;\r\n    packageListByProductId: any,\r\n    setpackageListByProductId: Action<Order, any>;\r\n    fetchpackageListByProductId: Thunk<Order>;\r\n    selectedCat: any,\r\n    setselectedCat: Action<Order, any>;\r\n    postsaveProductOrder: Thunk<Order, any>;\r\n    orderStatus: boolean;\r\n    pendingProductOrderList: any,\r\n    setpendingProductOrderList: Action<Order, any>,\r\n    fetchpendingProductOrderList: Thunk<Order>;\r\n    preApproveProductOrderList: any,\r\n    setpreApproveProductOrderListt: Action<Order, any>,\r\n    fetchpreApproveProductOrderList: Thunk<Order>;\r\n    deleteProductOrder: Thunk<Order, any>;\r\n    approveProductOrder: Thunk<Order, any>;\r\n    preApproveProductOrderPost: Thunk<Order, any>;\r\n    ordersuccess: boolean,\r\n    setordersuccess: Action<Order, any>\r\n}\r\n\r\n\r\nexport const orderStore: Order = {\r\n    ordersuccess: false,\r\n    setordersuccess: action((state, payload) => {\r\n        state.ordersuccess = payload;\r\n    }),\r\n    productList: [],\r\n    fetchproductList: thunk(async (actions) => {\r\n        const response = await fetchproductList();\r\n        if (response.status === 201 || response.status === 200) {\r\n            const body = await response.json();\r\n            actions.setproductList(body?.item);\r\n        } else {\r\n            actions.setproductList([]);\r\n        }\r\n    }),\r\n    setproductList: action((state, payload) => {\r\n        state.productList = payload;\r\n    }),\r\n    ///*******/////\r\n    clientList: [],\r\n    fetchclientList: thunk(async (actions, payload) => {\r\n        const response = await fetchclientList(payload);\r\n        if (response.status === 201 || response.status === 200) {\r\n            const body = await response.json();\r\n           // console.log(body);\r\n            actions.setclientList(body?.item);\r\n        } else {\r\n            actions.setclientList([]);\r\n        }\r\n    }),\r\n    setclientList: action((state, payload) => {\r\n        state.clientList = payload;\r\n    }),\r\n    ///*******/////\r\n    packageListByProductId: [],\r\n    fetchpackageListByProductId: thunk(async (actions, payload) => {\r\n        const response = await fetchpackageListByProductId(payload);\r\n        if (response.status === 201 || response.status === 200) {\r\n            const body = await response.json();\r\n            actions.setpackageListByProductId(body?.item);\r\n        } else {\r\n            actions.setpackageListByProductId([]);\r\n        }\r\n    }),\r\n    setpackageListByProductId: action((state, payload) => {\r\n        state.packageListByProductId = payload;\r\n    }),\r\n    ///*******/////\r\n    selectedCat: null,\r\n    setselectedCat: action((state, payload) => {\r\n        state.selectedCat = payload;\r\n    }),\r\n\r\n    ///*******/////\r\n    orderStatus: false,\r\n\r\n    postsaveProductOrder: thunk(async (actions, payload) => {\r\n        const response = await postsaveProductOrder(payload);\r\n        if (response.status === 201 || response.status === 200) {\r\n            const body = await response.json();\r\n            console.log(body);\r\n            if (body.messageType == 1) {\r\n                notification['success']({\r\n                    message: 'Order Form',\r\n                    description: body?.message,\r\n                });\r\n                actions.setordersuccess(true);\r\n            } else {\r\n                notification['error']({\r\n                    message: 'Order Form',\r\n                    description: body?.message,\r\n                });\r\n                actions.setordersuccess(false);\r\n            }\r\n            // actions.setpackageListByProductId(body?.item);\r\n        } else {\r\n\r\n        }\r\n    }),\r\n\r\n    ///*******/////\r\n\r\n    pendingProductOrderList: [],\r\n    fetchpendingProductOrderList: thunk(async (actions) => {\r\n        const response = await fetchpendingProductOrderList();\r\n        if (response.status === 201 || response.status === 200) {\r\n            const body = await response.json();\r\n            actions.setpendingProductOrderList(body?.item);\r\n        } else {\r\n            actions.setpendingProductOrderList([]);\r\n        }\r\n    }),\r\n    setpendingProductOrderList: action((state, payload) => {\r\n        state.pendingProductOrderList = payload;\r\n    }),\r\n    ///*******/////\r\n\r\n    ///*******/////\r\n\r\n    preApproveProductOrderList: [],\r\n    fetchpreApproveProductOrderList: thunk(async (actions) => {\r\n        const response = await fetchpreApproveProductOrderList();\r\n        if (response.status === 201 || response.status === 200) {\r\n            const body = await response.json();\r\n            console.log(body);\r\n            actions.setpreApproveProductOrderListt(body?.item);\r\n        } else {\r\n            actions.setpreApproveProductOrderListt([]);\r\n        }\r\n    }),\r\n    setpreApproveProductOrderListt: action((state, payload) => {\r\n        state.preApproveProductOrderList = payload;\r\n    }),\r\n    ///*******/////\r\n    deleteProductOrder: thunk(async (actions, payload) => {\r\n        const response = await deleteProductOrder(payload);\r\n        //console.log(response)\r\n        if (response.status === 201 || response.status === 200) {\r\n            const body: any = await response.json();\r\n\r\n            notification['success']({\r\n                message: 'Order Delete',\r\n                description: 'Selected partner request has been deleted successfully',\r\n            });\r\n            const newresponse = await fetchpendingProductOrderList();\r\n            if (newresponse.status === 200) {\r\n                const body: any = await newresponse.json();\r\n                if (body.messageType == 1) {\r\n                    actions.setpendingProductOrderList(body.item);\r\n                }\r\n            } else {\r\n                //const body = await response.json();\r\n                actions.setpendingProductOrderList([]);\r\n            }\r\n\r\n        } else {\r\n            //const body = await response.json();\r\n            notification['error']({\r\n                message: 'Order Delete',\r\n                description: 'Something went wrong ',\r\n            });\r\n            //\tactions.setSignUpStatus(null);\r\n        }\r\n    }),\r\n    ///*******/////\r\n    approveProductOrder: thunk(async (actions, payload) => {\r\n        const response = await approveProductOrder(payload);\r\n        //console.log(response)\r\n        if (response.status === 201 || response.status === 200) {\r\n            const body: any = await response.json();\r\n            if (body.messageType == 1) {\r\n                notification['success']({\r\n                    message: 'Product Order',\r\n                    description: body.message,\r\n                })\r\n            } else {\r\n                notification['error']({\r\n                    message: 'Product Order',\r\n                    description: body.message,\r\n                })\r\n            }\r\n            const newresponse = await fetchpendingProductOrderList();\r\n            if (newresponse.status === 200) {\r\n                const body: any = await newresponse.json();\r\n                if (body.messageType == 1) {\r\n                    actions.setpendingProductOrderList(body.item);\r\n                }\r\n            } else {\r\n                //const body = await response.json();\r\n                actions.setpendingProductOrderList([]);\r\n            }\r\n\r\n        } else {\r\n            //const body = await response.json();\r\n            notification['error']({\r\n                message: 'Order Delete',\r\n                description: 'Something went wrong ',\r\n            });\r\n            //\tactions.setSignUpStatus(null);\r\n        }\r\n    }),    ///*******/////\r\n    preApproveProductOrderPost: thunk(async (actions, payload) => {\r\n        const response = await preApproveProductOrder(payload);\r\n        //console.log(response)\r\n        if (response.status === 201 || response.status === 200) {\r\n            const body: any = await response.json();\r\n            console.log(body);\r\n            notification['success']({\r\n                message: 'Product Order',\r\n                description: \"Selected product is now in preapprove-order list\",\r\n            })\r\n            // if (body.messageType == 1) {\r\n            //     notification['success']({\r\n            //         message: 'Product Order',\r\n            //         description: body.message,\r\n            //     })\r\n            // } else {\r\n            //     notification['error']({\r\n            //         message: 'Product Order',\r\n            //         description: body.message,\r\n            //     })\r\n            // }\r\n            const newresponse = await fetchpendingProductOrderList();\r\n            if (newresponse.status === 200) {\r\n                const body: any = await newresponse.json();\r\n                if (body.messageType == 1) {\r\n                    actions.setpendingProductOrderList(body.item);\r\n                }\r\n            } else {\r\n                //const body = await response.json();\r\n                actions.setpendingProductOrderList([]);\r\n            }\r\n\r\n        } else {\r\n            //const body = await response.json();\r\n            notification['error']({\r\n                message: 'Order Delete',\r\n                description: 'Something went wrong ',\r\n            });\r\n            //\tactions.setSignUpStatus(null);\r\n        }\r\n    }),\r\n\r\n}\r\n","import { post, get} from \"../http\";\r\n\r\n\r\nexport const saveProductBillGenerateMonthly = (payload) => post(`/product/bill-generate/monthly/save?customProductId=${payload.customProductId}&month=${payload.month}&year=${payload.year}`, '');\r\nexport const saveProductBillGenerateYearly = (payload) => post(`/product/bill-generate/yearly/save`, payload);\r\nexport const fetchclientUnit = (id) => get(`/client-details/unity?clientId=${id}`);\r\nexport const fetchsearchApipClientBillPaidUnpaidList = (value) => get(`/product/bill/report/apip/client-bill/paid-unpaid/view?productId=${value?.productId}&year=${value?.year}`);\r\nexport const fetchsearchPipClientBillPaidUnpaidList = (value) => get(`/product/bill/report/pip/client-bill/paid-unpaid/view?productId=${value?.productId}&year=${value?.year}`);\r\nexport const fetchsearchSdlClientBillPaidUnpaidList = (value) => get(`/product/bill/report/sdl/client-bill/paid-unpaid/view?productId=${value?.productId}&year=${value?.year}`);\r\nexport const fetchsearchProductWiseMonthlyPaidUnpaidList = (value) => get(`/product/bill/report/sdl/product-wise/monthly/paid-unpaid/view?month=${value?.month}&year=${value?.year}`);\r\nexport const fetchsearchApipClientBillPaidUnpaidListSDL = (value) => get(`/product/bill/report/apip/client-bill/paid-unpaid/view/by/sdl?productId=${value?.productId}&year=${value?.year}&apipId=${value?.apipId}`);\r\nexport const fetchdisbursementPayableList = () => get(`/product-bill/disbursement/payable/list`);\r\nexport const saveDisbursement = (payload) => post(`/product-bill/disbursement/save`, payload);","import { createStore } from 'easy-peasy';\r\nimport { Auth, authStore } from './states/auth/auth';\r\nimport { Common, commonStore } from './states/common/common';\r\nimport { Partner, partnerStore } from './states/partner/partner';\r\nimport { Order, orderStore } from './states/partner/order';\r\nimport { Bill, billStore } from './states/bill/bill';\r\n\r\nexport interface StoreModel {\r\n\tauth: Auth;\r\n\tcommon: Common;\r\n\tpartner: Partner;\r\n\torder: Order;\r\n\tbill: Bill;\r\n}\r\n\r\nconst storeModel: StoreModel = {\r\n\tauth: authStore,\r\n\tcommon: commonStore,\r\n\tpartner: partnerStore,\r\n\torder: orderStore,\r\n\tbill: billStore,\r\n}\r\n\r\nexport const store = createStore(storeModel);\r\n","import { notification } from 'antd';\r\nimport { Action, Thunk, thunk, action } from 'easy-peasy';\r\nimport { saveProductBillGenerateMonthly, fetchclientUnit, saveProductBillGenerateYearly, fetchdisbursementPayableList, saveDisbursement, fetchsearchApipClientBillPaidUnpaidList, fetchsearchPipClientBillPaidUnpaidList, fetchsearchSdlClientBillPaidUnpaidList, fetchsearchApipClientBillPaidUnpaidListSDL, fetchsearchProductWiseMonthlyPaidUnpaidList } from '../../../http/bill/bill';\r\n\r\nexport interface Bill {\r\n\r\n\tsaveProductBillGenerateMonthly: Thunk<Bill, any>\r\n\tsaveProductBillGenerateYearly: Thunk<Bill, any>\r\n\tsaveDisbursement: Thunk<Bill, any>\r\n\r\n\tclientUnit: any,\r\n\tsetclientUnit: Action<Bill, any>;\r\n\tfetchclientUnit: Thunk<Bill, any>;\r\n\r\n\tdisbursementPayableList: any,\r\n\tsetdisbursementPayableList: Action<Bill, any>;\r\n\tfetchdisbursementPayableList: Thunk<Bill>;\r\n\r\n\tsearchApipClientBillPaidUnpaidList: any,\r\n\tsetsearchApipClientBillPaidUnpaidList: Action<Bill, any>;\r\n\tfetchsearchApipClientBillPaidUnpaidList: Thunk<Bill>;\r\n\r\n\tsearchPipClientBillPaidUnpaidList: any,\r\n\tsetsearchPipClientBillPaidUnpaidList: Action<Bill, any>;\r\n\tfetchsearchPipClientBillPaidUnpaidList: Thunk<Bill>;\r\n\r\n\r\n\tsearchSdlClientBillPaidUnpaidList: any,\r\n\tsetsearchSdlClientBillPaidUnpaidList: Action<Bill, any>;\r\n\tfetchsearchSdlClientBillPaidUnpaidList: Thunk<Bill>;\r\n\r\n\tsearchApipClientBillPaidUnpaidListSDL: any,\r\n\tsetsearchApipClientBillPaidUnpaidListSDL: Action<Bill, any>;\r\n\tfetchsearchApipClientBillPaidUnpaidListSDL: Thunk<Bill>;\t\r\n\t\r\n\t\r\n\tsearchProductWiseMonthlyPaidUnpaidList: any,\r\n\tsetsearchProductWiseMonthlyPaidUnpaidList: Action<Bill, any>;\r\n\tfetchsearchProductWiseMonthlyPaidUnpaidList: Thunk<Bill>;\r\n\r\n}\r\n\r\nexport const billStore: Bill = {\r\n\r\n\tclientUnit: 0,\r\n\tfetchclientUnit: thunk(async (actions, payload) => {\r\n\t\tconst response = await fetchclientUnit(payload);\r\n\t\tif (response.status === 201 || response.status === 200) {\r\n\t\t\tconst body = await response.json();\r\n\t\t\tconsole.log(body);\r\n\t\t\tactions.setclientUnit(body?.item);\r\n\t\t} else {\r\n\t\t\tactions.setclientUnit(0);\r\n\t\t}\r\n\t}),\r\n\tsetclientUnit: action((state, payload) => {\r\n\t\tstate.clientUnit = payload;\r\n\t}),\r\n\tdisbursementPayableList: [],\r\n\tfetchdisbursementPayableList: thunk(async (actions) => {\r\n\t\tconst response = await fetchdisbursementPayableList();\r\n\t\tif (response.status === 201 || response.status === 200) {\r\n\t\t\tconst body = await response.json();\r\n\r\n\t\t\tactions.setdisbursementPayableList(body?.item);\r\n\t\t} else {\r\n\t\t\tactions.setdisbursementPayableList([]);\r\n\t\t}\r\n\t}),\r\n\tsetdisbursementPayableList: action((state, payload) => {\r\n\t\tstate.disbursementPayableList = payload;\r\n\t}),\r\n\tsearchApipClientBillPaidUnpaidList: [],\r\n\tfetchsearchApipClientBillPaidUnpaidList: thunk(async (actions, payload) => {\r\n\t\tconst response = await fetchsearchApipClientBillPaidUnpaidList(payload);\r\n\t\tif (response.status === 201 || response.status === 200) {\r\n\t\t\tconst body = await response.json();\r\n\t\t\tif (body?.item.length > 0) {\r\n\t\t\t\tactions.setsearchApipClientBillPaidUnpaidList(body?.item);\r\n\t\t\t} else {\r\n\t\t\t\tnotification['error']({\r\n\t\t\t\t\tmessage: 'Bill Report',\r\n\t\t\t\t\tdescription: 'No data found',\r\n\t\t\t\t});\r\n\t\t\t\tactions.setsearchApipClientBillPaidUnpaidList([])\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tactions.setsearchApipClientBillPaidUnpaidList([]);\r\n\t\t}\r\n\t}),\r\n\tsetsearchApipClientBillPaidUnpaidList: action((state, payload) => {\r\n\t\tstate.searchApipClientBillPaidUnpaidList = payload;\r\n\t}),\r\n\tsearchPipClientBillPaidUnpaidList: [],\r\n\tfetchsearchPipClientBillPaidUnpaidList: thunk(async (actions, payload) => {\r\n\t\tconst response = await fetchsearchPipClientBillPaidUnpaidList(payload);\r\n\t\tif (response.status === 201 || response.status === 200) {\r\n\t\t\tconst body = await response.json();\r\n\t\t\tif (body?.item.length > 0) {\r\n\t\t\t\tactions.setsearchPipClientBillPaidUnpaidList(body?.item);\r\n\t\t\t} else {\r\n\t\t\t\tnotification['error']({\r\n\t\t\t\t\tmessage: 'Bill Report',\r\n\t\t\t\t\tdescription: 'No data found',\r\n\t\t\t\t});\r\n\t\t\t\tactions.setsearchPipClientBillPaidUnpaidList([])\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tactions.setsearchPipClientBillPaidUnpaidList([]);\r\n\t\t}\r\n\t}),\r\n\tsetsearchPipClientBillPaidUnpaidList: action((state, payload) => {\r\n\t\tstate.searchPipClientBillPaidUnpaidList = payload;\r\n\t}),\r\n\tsearchSdlClientBillPaidUnpaidList: [],\r\n\tfetchsearchSdlClientBillPaidUnpaidList: thunk(async (actions, payload) => {\r\n\t\tconst response = await fetchsearchSdlClientBillPaidUnpaidList(payload);\r\n\t\tif (response.status === 201 || response.status === 200) {\r\n\t\t\tconst body = await response.json();\r\n\t\t\tif (body?.item.length > 0) {\r\n\t\t\t\tactions.setsearchSdlClientBillPaidUnpaidList(body?.item);\r\n\t\t\t} else {\r\n\t\t\t\tnotification['error']({\r\n\t\t\t\t\tmessage: 'Bill Report',\r\n\t\t\t\t\tdescription: 'No data found',\r\n\t\t\t\t});\r\n\t\t\t\tactions.setsearchSdlClientBillPaidUnpaidList([])\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tactions.setsearchSdlClientBillPaidUnpaidList([]);\r\n\t\t}\r\n\t}),\r\n\tsetsearchSdlClientBillPaidUnpaidList: action((state, payload) => {\r\n\t\tstate.searchSdlClientBillPaidUnpaidList = payload;\r\n\t}),\r\n\r\n\tsearchApipClientBillPaidUnpaidListSDL: [],\r\n\tfetchsearchApipClientBillPaidUnpaidListSDL: thunk(async (actions, payload) => {\r\n\t\t// console.log(payload)\r\n\t\tconst response = await fetchsearchApipClientBillPaidUnpaidListSDL(payload);\r\n\t\tif (response.status === 201 || response.status === 200) {\r\n\t\t\tconst body = await response.json();\r\n\t\t\tif (body?.item.length > 0) {\r\n\t\t\t\tactions.setsearchApipClientBillPaidUnpaidListSDL(body?.item);\r\n\t\t\t} else {\r\n\t\t\t\tnotification['error']({\r\n\t\t\t\t\tmessage: 'Bill Report',\r\n\t\t\t\t\tdescription: 'No data found',\r\n\t\t\t\t});\r\n\t\t\t\tactions.setsearchApipClientBillPaidUnpaidListSDL([])\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tactions.setsearchApipClientBillPaidUnpaidListSDL([]);\r\n\t\t}\r\n\t}),\r\n\tsetsearchApipClientBillPaidUnpaidListSDL: action((state, payload) => {\r\n\t\tstate.searchApipClientBillPaidUnpaidListSDL = payload;\r\n\t}),\t\r\n\t\r\n\tsearchProductWiseMonthlyPaidUnpaidList: [],\r\n\tfetchsearchProductWiseMonthlyPaidUnpaidList: thunk(async (actions, payload) => {\r\n\t\t// console.log(payload)\r\n\t\tconst response = await fetchsearchProductWiseMonthlyPaidUnpaidList(payload);\r\n\t\tif (response.status === 201 || response.status === 200) {\r\n\t\t\tconst body = await response.json();\r\n\t\t\tif (body?.item.length > 0) {\r\n\t\t\t\tactions.setsearchProductWiseMonthlyPaidUnpaidList(body?.item);\r\n\t\t\t} else {\r\n\t\t\t\tnotification['error']({\r\n\t\t\t\t\tmessage: 'Bill Report',\r\n\t\t\t\t\tdescription: 'No data found',\r\n\t\t\t\t});\r\n\t\t\t\tactions.setsearchProductWiseMonthlyPaidUnpaidList([])\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tactions.setsearchProductWiseMonthlyPaidUnpaidList([]);\r\n\t\t}\r\n\t}),\r\n\tsetsearchProductWiseMonthlyPaidUnpaidList: action((state, payload) => {\r\n\t\tstate.searchProductWiseMonthlyPaidUnpaidList = payload;\r\n\t}),\r\n\r\n\tsaveProductBillGenerateMonthly: thunk(async (actions, payload) => {\r\n\t\tconst response = await saveProductBillGenerateMonthly(payload);\r\n\t\tif (response.status === 201 || response.status === 200) {\r\n\t\t\tconst body = await response.json();\r\n\t\t\tconsole.log(body)\r\n\t\t\tif (body.messageType == 1) {\r\n\t\t\t\tnotification['success']({\r\n\t\t\t\t\tmessage: 'Bill Generate',\r\n\t\t\t\t\tdescription: body?.message,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tnotification['error']({\r\n\t\t\t\t\tmessage: 'Bill Generate',\r\n\t\t\t\t\tdescription: body?.message,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t// actions.setpartnerProfile(body?.item);\r\n\t\t} else {\r\n\t\t\t//const body = await response.json();\r\n\t\t\t//actions.loginFailed(\"Invalid Username/Password\");\r\n\t\t}\r\n\t}),\r\n\tsaveProductBillGenerateYearly: thunk(async (actions, payload) => {\r\n\t\tconst response = await saveProductBillGenerateYearly(payload);\r\n\t\tif (response.status === 201 || response.status === 200) {\r\n\t\t\tconst body = await response.json();\r\n\t\t\tconsole.log(body)\r\n\t\t\tif (body.messageType == 1) {\r\n\t\t\t\tnotification['success']({\r\n\t\t\t\t\tmessage: 'Bill Generate',\r\n\t\t\t\t\tdescription: body?.message,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tnotification['error']({\r\n\t\t\t\t\tmessage: 'Bill Generate',\r\n\t\t\t\t\tdescription: body?.message,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t// actions.setpartnerProfile(body?.item);\r\n\t\t} else {\r\n\t\t\t//const body = await response.json();\r\n\t\t\t//actions.loginFailed(\"Invalid Username/Password\");\r\n\t\t}\r\n\t}),\r\n\r\n\tsaveDisbursement: thunk(async (actions, payload) => {\r\n\t\tconst response = await saveDisbursement(payload);\r\n\t\tif (response.status === 201 || response.status === 200) {\r\n\t\t\tconst body = await response.json();\r\n\t\t\tif (body.messageType == 1) {\r\n\t\t\t\tnotification['success']({\r\n\t\t\t\t\tmessage: 'Bill Disbursment',\r\n\t\t\t\t\tdescription: body?.message,\r\n\t\t\t\t});\r\n\r\n\r\n\t\t\t} else {\r\n\t\t\t\tnotification['error']({\r\n\t\t\t\t\tmessage: 'Bill Disbursment',\r\n\t\t\t\t\tdescription: body?.message,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t// actions.setpartnerProfile(body?.item);\r\n\t\t} else {\r\n\t\t\t//const body = await response.json();\r\n\t\t\t//actions.loginFailed(\"Invalid Username/Password\");\r\n\t\t}\r\n\t}),\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\nimport { StoreProvider } from 'easy-peasy';\nimport { store } from './app/store/store'; // or 'antd/dist/antd.less'\n\nReactDOM.render(\n  <StoreProvider store={store}>\n    <App />\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}